<?xml version='1.0' encoding='windows-1252'?>
<GateDocument version="3">
<!-- The document's features-->

<GateDocumentFeatures>
<Feature>
  <Name className="java.lang.String">gate.SourceURL</Name>
  <Value className="java.lang.String">file:/D:/drone_document/drone_document/TeamA_FinalReport.txt</Value>
</Feature>
<Feature>
  <Name className="java.lang.String">MimeType</Name>
  <Value className="java.lang.String">text/plain</Value>
</Feature>
<Feature>
  <Name className="java.lang.String">docNewLineType</Name>
  <Value className="java.lang.String">CRLF</Value>
</Feature>
</GateDocumentFeatures>
<!-- The document content area with serialized nodes -->

<TextWithNodes>1.  Project Overview&#xd;
&#xd;
1.1  Objectives&#xd;
&#xd;
1.1.1  Background&#xd;
&#xd;
Currently,  package  delivery  truck  drivers  hand-carry  packages  door  to  &#xd;
door.  This  model  is  used  by&#xd;
Federal  Express  (FedEx),  United  Postal  Service  (UPS),  United  States  &#xd;
Postal  Service  (USPS),  and&#xd;
Deutsche  Post  DHL  Group  (DHL).  We  believe  that  drones  have  the  &#xd;
potential  to  expedite  this  system.&#xd;
According  to  Amazon,  80%  of  packages  shipped  weigh  5  lbs  or  less  -- &#xd;
 an  ideal  weight  for  current&#xd;
technology.&#xd;
&#xd;
Amazon is developing Prime Air with the same intent. However, we believe the &#xd;
most efficient system&#xd;
combines  delivery  trucks  with <Node id="671"/> Unmanned  Aerial  Vehicles<Node id="698"/>  (UAVâ&#x20ac;&#x2122;s)  which  &#xd;
saves  time,  expense,  and&#xd;
improves customerâ&#x20ac;&#x2122;s satisfaction.&#xd;
&#xd;
1.1.2  Problem Summary&#xd;
&#xd;
Delivering packages to a house using <Node id="851"/>UAVs<Node id="855"/>.&#xd;
&#xd;
1.1.3  Project Description&#xd;
&#xd;
Given the coordinates of the house, a<Node id="927"/> <Node id="928"/>UAV<Node id="931"/> with a <Node id="939"/>package<Node id="946"/> <Node id="947"/>takes off<Node id="956"/> from point &#xd;
A,<Node id="972"/> autonomously <Node id="986"/>reaches<Node id="993"/>&#xd;<Node id="994"/>
close to the house,<Node id="1014"/> <Node id="1015"/>scans<Node id="1020"/> the outside of the house<Node id="1045"/> for a visually <Node id="1061"/>marked drop &#xd;
point<Node id="1080"/>,<Node id="1081"/> <Node id="1082"/>lands<Node id="1087"/>, <Node id="1089"/>drops off<Node id="1098"/> the&#xd;
package<Node id="1111"/>, then<Node id="1117"/> <Node id="1118"/>takes off<Node id="1127"/> <Node id="1128"/>again to <Node id="1137"/>land<Node id="1141"/> on another platform at point B<Node id="1172"/>.&#xd;
&#xd;
2.  Use Case&#xd;
&#xd;
Sam drives a package delivery truck  for one of the largest parcel delivery &#xd;
companies. He arrives each&#xd;
morning to a preloaded truck and is handed his route for the day. Even though &#xd;
he has an assigned route,&#xd;
he  sometimes  is  tasked  with  delivery packages  to  additional  streets.  &#xd;
These  are  often  the  packages  that&#xd;
should have been delivered the day before. Thus itâ&#x20ac;&#x2122;s critical that packages &#xd;
make it to the right house on&#xd;
time today.&#xd;
&#xd;
Now  that  his  company  uses  drones,  Sam  can  cover  more  area  in  less  &#xd;
time.  He  drives  out  to  his  first&#xd;
neighborhood for the day with two packages to deliver. He can quickly deliver &#xd;
the first package, which is&#xd;
heavier. The second package is lighter but a street over. After  parking, he &#xd;
quickly attaches the second&#xd;
package  to  a  drone  and  selects  the  address  on  the  base  station  &#xd;
computer.  <Node id="2078"/>The  drone  <Node id="2090"/>takes  off<Node id="2100"/>  and&#xd;
disappears over a rooftop as Sam unloads the first package.&#xd;
&#xd;
&#xd;
Figure 1 and 2: Artistâ&#x20ac;&#x2122;s Rendition of Sam and one of his drones; Artistâ&#x20ac;&#x2122;s &#xd;
Rendition of Drone Delivering&#xd;
Packages to End Customer&#xd;
&#xd;
Having delivered the first package, Sam gets back in the truck and starts &#xd;
driving. In the past, he would&#xd;
have driven to the next house and dropped off the package. Nowadays, Sam knows &#xd;
that the drone will&#xd;
<Node id="2521"/>deliver<Node id="2528"/> the <Node id="2533"/>package<Node id="2540"/> to the right house and catch up<Node id="2572"/>. This saves him a few &#xd;
minutes which adds up over the&#xd;
course of the day to real time savings. This makes Sam a little happy.&#xd;
&#xd;
Meanwhile, <Node id="2714"/>the drone has <Node id="2728"/>moved<Node id="2733"/> within vicinity of the second house.<Node id="2770"/> It begins &#xd;
<Node id="2783"/>scanning<Node id="2791"/> around for the&#xd;
<Node id="2808"/>visual marker<Node id="2821"/> outside the house.<Node id="2840"/> The drone <Node id="2851"/>finds<Node id="2856"/> the <Node id="2861"/>marker<Node id="2867"/> and <Node id="2872"/>moves in<Node id="2880"/> for a &#xd;
<Node id="2889"/>landing<Node id="2896"/>. Itâ&#x20ac;&#x2122;s able to<Node id="2912"/> <Node id="2913"/>avoid&#xd;<Node id="2919"/>
<Node id="2920"/>people<Node id="2926"/> on the sidewal<Node id="2941"/>k and the <Node id="2951"/>large tree<Node id="2961"/> outside the house.<Node id="2980"/> The drone <Node id="2991"/>lands on<Node id="2999"/> &#xd;
the <Node id="3006"/>marker<Node id="3012"/> and does a&#xd;
quick confirmation,<Node id="3044"/> it <Node id="3048"/>checks<Node id="3054"/> the <Node id="3059"/>RFID code<Node id="3068"/> embedded in the marker<Node id="3091"/>. <Node id="3093"/>Confirming<Node id="3103"/> &#xd;
the correct house<Node id="3123"/> has&#xd;
been found, <Node id="3141"/>the  drone <Node id="3152"/>releases<Node id="3160"/> the  <Node id="3166"/>package<Node id="3173"/>  and <Node id="3179"/> <Node id="3180"/>notifies<Node id="3188"/> the package  &#xd;
delivery truckâ&#x20ac;&#x2122;s  base station<Node id="3236"/>.<Node id="3237"/> <Node id="3238"/>The&#xd;
base station<Node id="3255"/> then <Node id="3261"/>updates<Node id="3268"/> the drone on the delivery truckâ&#x20ac;&#x2122;s position<Node id="3313"/>.&#xd;
&#xd;
The drone catches up to Sam at a red light and they continue on their way. &#xd;
Samâ&#x20ac;&#x2122;s day continues this way.&#xd;
&#xd;
On a major street, he has several packages to deliver in the area. He quickly &#xd;
loads up a few drones, selects&#xd;
the addresses, and watches as the drones do all the work. Sam had to get a gym &#xd;
membership since heâ&#x20ac;&#x2122;s no&#xd;
longer walking as much, but heâ&#x20ac;&#x2122;s happy to be getting through neighborhoods &#xd;
substantially faster. Because&#xd;
the drones allow one driver to do more, the delivery company is able to offer &#xd;
package delivery at a more&#xd;
competitive  rate  with  more  margin.  This  makes  customers  happy  in  &#xd;
addition  to  getting  their  packages&#xd;
faster.    In turn, they are more likely to use the delivery company, which &#xd;
makes the company pleased with&#xd;
their investment.&#xd;
&#xd;
Late in the day, <Node id="4134"/>the base station<Node id="4150"/> on Samâ&#x20ac;&#x2122;s delivery truck <Node id="4177"/>notifies<Node id="4185"/> him that an &#xd;
adjacent route wasnâ&#x20ac;&#x2122;t able to&#xd;
deliver  a  package.  In  the  past,  this  would  have  meant  that  the  &#xd;
package  would  be  driven  back  to  the&#xd;
warehouse to be resorted and delivered with tomorrowâ&#x20ac;&#x2122;s load. This was a &#xd;
substantial waste of fuel and&#xd;
manpower. Today, routes can be dynamically updated. <Node id="4512"/>A drone will <Node id="4525"/>deliver<Node id="4532"/> the &#xd;
<Node id="4539"/>package<Node id="4546"/> to Samâ&#x20ac;&#x2122;s truck.&#xd;
Once heâ&#x20ac;&#x2122;s driven into the correct neighborhood, <Node id="4616"/>the drone will <Node id="4631"/>deliver<Node id="4638"/> the &#xd;
<Node id="4645"/>package<Node id="4652"/>. The customer  will&#xd;
never know there was a problem, and the delivery company saves money.&#xd;
&#xd;
&#xd;
Figure 3: Full Scope of Delivery System&#xd;
&#xd;
Sam  arrives  back  at  the  warehouse,  his  truck  empty.  Heâ&#x20ac;&#x2122;s  satisfied  &#xd;
in  the  work  heâ&#x20ac;&#x2122;s  accomplished,&#xd;
customers  are  happy  that  received  their  packages  on  time,  and  the  &#xd;
delivery  company  is  exceptionally&#xd;
happy with the improved efficiency and customer retention.&#xd;
&#xd;
3.  System-Level Requirements&#xd;
&#xd;
The critical requirements for this project are listed below under Mandatory &#xd;
Requirements. These are the&#xd;
â&#x20ac;&#x2dc;needsâ&#x20ac;&#x2122;  of  the  project.  Additionally,  the  team  identified  several  &#xd;
value-added  requirements  during&#xd;
brainstorming. These â&#x20ac;&#x2dc;wantsâ&#x20ac;&#x2122; are listed below under Desired Requirements.&#xd;
&#xd;
3.1. Mandatory&#xd;
&#xd;
3.1.1 Functional Requirements&#xd;
&#xd;
M.F.1 <Node id="5485"/>Hold<Node id="5489"/> and <Node id="5494"/>carry<Node id="5499"/> <Node id="5500"/>packages<Node id="5508"/>.&#xd;
&#xd;
M.F.2 <Node id="5519"/>Autonomously take off<Node id="5540"/> from a <Node id="5548"/>visually marked platform<Node id="5572"/>.&#xd;
&#xd;
M.F.3<Node id="5582"/> <Node id="5583"/>Navigate<Node id="5591"/> to a known position close to the house<Node id="5630"/>.&#xd;
&#xd;
M.F.4 <Node id="5641"/>Detect<Node id="5647"/> and <Node id="5652"/>navigate<Node id="5660"/> to the <Node id="5668"/>drop point<Node id="5678"/> at the house<Node id="5691"/>.&#xd;
&#xd;
M.F.5 <Node id="5702"/>Land<Node id="5706"/> at <Node id="5710"/>visually marked drop point<Node id="5736"/>.&#xd;
&#xd;
M.F.6<Node id="5746"/> <Node id="5747"/>Drop<Node id="5751"/> <Node id="5752"/>package<Node id="5759"/> <Node id="5760"/>within 2m of the target drop point<Node id="5794"/>.&#xd;
&#xd;
M.F.7<Node id="5804"/> <Node id="5805"/>Take off<Node id="5813"/>, <Node id="5815"/>fly back<Node id="5823"/> to and <Node id="5831"/>land<Node id="5835"/> at another <Node id="5847"/>visually marked platform<Node id="5871"/>.&#xd;
&#xd;
3.2.2 Non-Functional Requirements&#xd;
&#xd;
M.N.1 Operates in an outdoor environment.&#xd;
&#xd;
M.N.2 Operates in a semi-known map. The <Node id="5998"/>GPS position<Node id="6010"/> of the house is known, but &#xd;
the exact location of&#xd;
the visual marker is unknown and is detected on the fly.&#xd;
&#xd;
M.N.3<Node id="6128"/> <Node id="6129"/>Avoids<Node id="6135"/> <Node id="6136"/>static obstacles<Node id="6152"/>.&#xd;
&#xd;
M.N.4 Sub-systems should be well documented and scalable.&#xd;
&#xd;
&#xd;
M.N.5 <Node id="6226"/>UAV<Node id="6229"/> should be <Node id="6240"/>smal<Node id="6244"/>l enough to operate in residential environments.&#xd;
&#xd;
M.N.6 <Node id="6302"/>Package<Node id="6309"/> should <Node id="6317"/>weigh at most 100g<Node id="6335"/> and fit in a cuboid of <Node id="6359"/>dimensions<Node id="6369"/> 9.5â&#x20ac;&#xfffd; &#xd;
x 6.5â&#x20ac;&#xfffd; x 2.2â&#x20ac;&#xfffd;.&#xd;
&#xd;
3.2. Desired&#xd;
&#xd;
3.2.1 Functional Requirements&#xd;
&#xd;
D.F.1 <Node id="6456"/>Pick up<Node id="6463"/> <Node id="6464"/>packages<Node id="6472"/>.&#xd;
&#xd;
D.F.2 <Node id="6483"/>Simulation<Node id="6493"/> with multiple <Node id="6508"/>UAVs<Node id="6512"/> and <Node id="6517"/>ground vehicles<Node id="6532"/>.&#xd;
&#xd;
D.F.3 <Node id="6543"/>Ground vehicle<Node id="6557"/> <Node id="6558"/>drives autonomously<Node id="6577"/>.&#xd;
&#xd;
D.F.4 <Node id="6588"/>UAV<Node id="6591"/> and <Node id="6596"/>ground vehicle<Node id="6610"/> <Node id="6611"/>communicate<Node id="6622"/> continuously<Node id="6635"/>.&#xd;
&#xd;
D.F.5 <Node id="6646"/>UAV<Node id="6649"/> <Node id="6650"/>confirms<Node id="6658"/> the identity of the house before <Node id="6692"/>dropping<Node id="6700"/> the <Node id="6705"/>package<Node id="6712"/> (<Node id="6714"/>RFID &#xd;
Tags<Node id="6725"/>).&#xd;
&#xd;
D.F.6 <Node id="6737"/>Drop<Node id="6741"/> <Node id="6742"/>package<Node id="6749"/> <Node id="6750"/>within 1m<Node id="6759"/> of the <Node id="6767"/>target drop point<Node id="6784"/>.&#xd;
&#xd;
D.F.7 <Node id="6795"/>Takes<Node id="6800"/> <Node id="6801"/>coordinates<Node id="6812"/> as input from the user<Node id="6835"/>.&#xd;
&#xd;
D.F.8 <Node id="6846"/>Communicates<Node id="6858"/> with <Node id="6864"/>platform<Node id="6872"/> to <Node id="6876"/>receive<Node id="6883"/> <Node id="6884"/>GPS updates<Node id="6895"/> (intermittently)<Node id="6912"/>.&#xd;
&#xd;
3.2.2 Non-Functional Requirements&#xd;
&#xd;
D.N.1 Operates in <Node id="6972"/>rains<Node id="6977"/> and <Node id="6982"/>snow<Node id="6986"/>.&#xd;
&#xd;
D.N.2 <Node id="6997"/>Avoids<Node id="7003"/> <Node id="7004"/>dynamic obstacles<Node id="7021"/>&#xd;<Node id="7022"/>
&#xd;
D.N.3 Operates <Node id="7040"/>without a GPS system<Node id="7060"/>.&#xd;
&#xd;
D.N.4 Has multiple <Node id="7084"/>UAVs<Node id="7088"/> to demonstrate efficiency and scalability.&#xd;
&#xd;
D.N.5 Compatible with higher weights of packages and greater variations in &#xd;
sizes.&#xd;
&#xd;
D.N.6 <Node id="7228"/>Obstacles<Node id="7237"/> with a cross section of <Node id="7262"/>0.5m x 0.5m<Node id="7273"/> are <Node id="7278"/>detected<Node id="7286"/> and actively &#xd;
<Node id="7302"/>avoided<Node id="7309"/>.&#xd;
&#xd;
D.N.7 <Node id="7320"/>A landing column <Node id="7337"/>with 2m radius<Node id="7351"/> exists around the visual marker&#xd;<Node id="7384"/>
&#xd;
D.N.8 Not reliant on GPS. <Node id="7413"/>Uses GPS to <Node id="7425"/>navigate<Node id="7433"/> close to the house<Node id="7452"/>. Does not &#xd;
rely on GPS to <Node id="7480"/>detect<Node id="7486"/> the&#xd;
<Node id="7492"/>visual marker<Node id="7505"/> at the drop point.&#xd;
&#xd;
3.3  Performance Requirements&#xd;
&#xd;
P.1 <Node id="7565"/>UAV<Node id="7568"/> <Node id="7569"/>places<Node id="7575"/> the <Node id="7580"/>package<Node id="7587"/> within <Node id="7595"/>2m<Node id="7597"/> of the target drop point<Node id="7622"/>.&#xd;
&#xd;
P.2 <Node id="7631"/>UAV<Node id="7634"/> <Node id="7635"/>flies<Node id="7640"/> for at least <Node id="7654"/>10 mins<Node id="7661"/> without <Node id="7670"/>replacing <Node id="7680"/>batteries<Node id="7689"/>.&#xd;
&#xd;
P.3 <Node id="7698"/>UAV<Node id="7701"/> <Node id="7702"/>carries<Node id="7709"/> <Node id="7710"/>packages<Node id="7718"/> weighing at least <Node id="7737"/>100g<Node id="7741"/>.&#xd;
&#xd;
P.4 <Node id="7750"/>UAV<Node id="7753"/> <Node id="7754"/>carries<Node id="7761"/> <Node id="7762"/>packages<Node id="7770"/> that fit in a cube of <Node id="7793"/>9.5â&#x20ac;&#xfffd; x 6.5â&#x20ac;&#xfffd; x 2.2â&#x20ac;&#xfffd;<Node id="7817"/>.&#xd;
&#xd;
P.5<Node id="7825"/> One <Node id="7830"/>visual markers<Node id="7844"/> <Node id="7845"/>exists<Node id="7851"/> <Node id="7852"/>per house<Node id="7861"/>.&#xd;
&#xd;
P.6 <Node id="7870"/>Visual markers<Node id="7884"/> between houses are at least <Node id="7913"/>10m<Node id="7916"/> apart.&#xd;
&#xd;
P.7. A landing column with <Node id="7954"/>3m<Node id="7956"/> radius exists around the <Node id="7982"/>visual marker<Node id="7995"/>&#xd;
&#xd;
P.8 <Node id="8003"/>Obstacles<Node id="8012"/> with a minimum cross section of 1.5m x 0.5m are <Node id="8061"/>detected<Node id="8069"/> and &#xd;
actively <Node id="8085"/>avoided<Node id="8092"/>.&#xd;
&#xd;
3.4 Subsystem Requirements:&#xd;
&#xd;
S.1 Vision&#xd;
&#xd;
S.1.1 The <Node id="8152"/>size<Node id="8156"/> of the <Node id="8164"/>marker<Node id="8170"/> must be within a square of side <Node id="8203"/>1.5m<Node id="8207"/>.&#xd;
&#xd;
S.1.2 <Node id="8218"/>Error<Node id="8223"/> in the X,Y,Z position of the <Node id="8253"/>marker<Node id="8259"/> from the camera should be &#xd;
correct up to <Node id="8302"/>10%<Node id="8305"/> of distance&#xd;
from it.&#xd;
&#xd;
&#xd;
S.2 Obstacle Detection and Avoidance&#xd;
&#xd;
S.2.1<Node id="8378"/> <Node id="8379"/>Obstacles<Node id="8388"/> must be <Node id="8397"/>detected<Node id="8405"/> with a <Node id="8413"/>range<Node id="8418"/> of <Node id="8422"/>50 cm to 150 cm<Node id="8437"/> from the <Node id="8447"/>UAV<Node id="8450"/>.&#xd;
&#xd;
S.2.2 <Node id="8461"/>Obstacles<Node id="8470"/> should be at least in 90% of the situations/positions<Node id="8524"/>.&#xd;
&#xd;
S.2.3 <Node id="8535"/>Distance<Node id="8543"/> to the<Node id="8550"/> obstacle<Node id="8559"/> should be correct with a maximum error of <Node id="8602"/>20 c<Node id="8606"/>m.&#xd;
&#xd;
S.2.4 <Node id="8618"/>Natural obstacles<Node id="8635"/> around a residential neighborhood should be <Node id="8680"/>detected<Node id="8688"/>.&#xd;
&#xd;
S.3 Flight control&#xd;
&#xd;
S.3.1<Node id="8720"/> <Node id="8721"/>UAV<Node id="8724"/> must <Node id="8730"/>reach<Node id="8735"/> the GPS waypoint<Node id="8752"/> with a maximum error of <Node id="8777"/>3m<Node id="8779"/>.&#xd;
&#xd;
S.3.2 <Node id="8790"/>UAV<Node id="8793"/> should be able to <Node id="8812"/>fly<Node id="8815"/> <Node id="8816"/>10 minutes<Node id="8826"/> without <Node id="8835"/>replacing<Node id="8844"/> the <Node id="8849"/>batteries<Node id="8858"/>.&#xd;
&#xd;
4.  Functional Architecture&#xd;
&#xd;
Figure 4: Functional Architecture Diagram&#xd;
&#xd;
The revised functional architecture of our system is as shown in Figure 4. &#xd;
Viewing the whole system as a&#xd;
black-box, there are 2 inputs â&#x20ac;&#x201c; the package to be delivered and GPS coordinates &#xd;
of customer location. The&#xd;
output of the system is the package successfully delivered at the destination.&#xd;
&#xd;
Looking  inside  the  black  box  now,  the  <Node id="9285"/>UAV<Node id="9288"/>  initially  holds  the  &#xd;
<Node id="9315"/>package<Node id="9322"/>  by  activating  an  electro-&#xd;
permanent magnet<Node id="9370"/>. Coordinates of the customer location are input to the User &#xd;
Interface.  The developed&#xd;
<Node id="9460"/>Plan  Mission  software<Node id="9483"/>  <Node id="9485"/>decides<Node id="9492"/>  the  navigation  waypoints  and  <Node id="9527"/>plans<Node id="9532"/>  a  &#xd;
path  to  the  destination<Node id="9565"/>.  This&#xd;
information is then<Node id="9593"/> <Node id="9594"/>relayed to<Node id="9604"/> the<Node id="9608"/> UAV<Node id="9612"/> by the <Node id="9620"/>communication interface<Node id="9643"/>. The &#xd;
<Node id="9651"/>mission planning software<Node id="9676"/>&#xd;
continuously<Node id="9690"/> receives<Node id="9699"/> the current coordinates<Node id="9723"/> from the <Node id="9733"/>UAV<Node id="9736"/> and <Node id="9741"/>sends<Node id="9746"/> updated &#xd;
coordinates back to the&#xd;
UAV<Node id="9785"/>.&#xd;
&#xd;
Meanwhile the <Node id="9804"/>UAV<Node id="9807"/> <Node id="9808"/>checks<Node id="9814"/> the <Node id="9819"/>battery status<Node id="9833"/>. If <Node id="9838"/>there is <Node id="9847"/>sufficient battery<Node id="9865"/>, &#xd;
the <Node id="9873"/>UAV<Node id="9876"/> <Node id="9877"/>arms the motor<Node id="9891"/> and&#xd;
<Node id="9897"/>takes off<Node id="9906"/>. <Node id="9908"/>The <Node id="9912"/>UAV<Node id="9915"/> <Node id="9916"/>navigates<Node id="9925"/> using the waypoint<Node id="9944"/> to the vicinity of the &#xd;
destination using GPS input. It&#xd;
then <Node id="10008"/>switches<Node id="10016"/> to the marker detection code<Node id="10045"/>. <Node id="10047"/>The <Node id="10051"/>UAV<Node id="10054"/> takes input from the <Node id="10076"/>camera<Node id="10082"/> &#xd;
and starts to <Node id="10099"/>scan<Node id="10103"/> the&#xd;
vicinity of the customer destination<Node id="10145"/> for the marker put up by the customer. It &#xd;
moves in a predetermined&#xd;
trajectory for <Node id="10231"/>scanning<Node id="10239"/>. Once <Node id="10246"/>the <Node id="10250"/>marker<Node id="10256"/> is <Node id="10260"/>detected<Node id="10268"/> <Node id="10269"/>the vision algorithm maps &#xd;
the size of the marker in&#xd;
the  image  to  actual  <Node id="10348"/>distance<Node id="10356"/>  of  the  <Node id="10367"/>UAV<Node id="10370"/>  from  the  marker.    <Node id="10394"/>The  <Node id="10399"/>UAV<Node id="10402"/>  &#xd;
continuously  <Node id="10420"/>receives<Node id="10428"/>  this&#xd;
information and moves towards the marker<Node id="10476"/>.   The <Node id="10484"/>UAV<Node id="10487"/> finally lowers <Node id="10503"/>lands<Node id="10508"/> on the &#xd;
marker. <Node id="10526"/>It <Node id="10529"/>drops<Node id="10534"/> the&#xd;
&#xd;
&#xd;
package<Node id="10551"/> by disengaging the electro-permanent magnet and <Node id="10600"/>flies<Node id="10605"/> back to the base &#xd;
station using waypoint&#xd;
navigation.&#xd;<Node id="10661"/>
&#xd;
During the â&#x20ac;&#x2dc;Detect Markerâ&#x20ac;&#x2122; &amp;â&#x20ac;&#x2122;  Navigate to Markerâ&#x20ac;&#x2122; functions, the <Node id="10738"/>UAV<Node id="10741"/> &#xd;
continuously<Node id="10756"/> runs<Node id="10761"/> an <Node id="10765"/>obstacle&#xd;
avoidance  algorithm<Node id="10795"/>  on-board.  The  <Node id="10813"/>obstacle-avoidance  algorithm<Node id="10842"/>  &#xd;
continuously  <Node id="10860"/>receives<Node id="10868"/>  data  from&#xd;
sensors<Node id="10889"/>,<Node id="10890"/> fuses<Node id="10896"/> the data<Node id="10905"/> and<Node id="10909"/> asks the flight controller to <Node id="10940"/>alter<Node id="10945"/> its trajectory &#xd;<Node id="10962"/>
if <Node id="10966"/>there is an <Node id="10978"/>obstacle<Node id="10986"/>  in its path<Node id="10999"/>.&#xd;
&#xd;
5. System Level Trade Studies&#xd;
&#xd;
Our project contains three major trade studies. We had to choose the UAV &#xd;
platform, our visual processing&#xd;
board and our sensor suite for obstacle detection.&#xd;
&#xd;
5.1  UAV Trade Study&#xd;
&#xd;
There are many factors that go into selecting a proper <Node id="11278"/>UAV<Node id="11281"/> platform such as &#xd;
cost, shipping time, payload&#xd;
<Node id="11331"/>capacity<Node id="11339"/>,  and  <Node id="11347"/>flight  time<Node id="11359"/>.  In  the  end,  we  used  10  different  metrics  &#xd;
to  evaluate  the  best  choice  for  our&#xd;
application.  The  top  three  highest  weights  were  <Node id="11511"/>payload<Node id="11518"/>  capacity,  &#xd;
price,  and  flight  time.  Payload  was&#xd;
given   the highest priority since it was crucial to our project  application. &#xd;
A UAV  without the ability to&#xd;
<Node id="11687"/>carry<Node id="11692"/> a<Node id="11694"/> package<Node id="11702"/> was useless in our project. Price was second highest because it &#xd;
was a large constraint on&#xd;
our  project.  Flight  time  was  given  the  third  highest  weight  because  &#xd;
of  the  necessity  that  the  vehicle&#xd;
consistently reach the door of the house and return to the platform no matter &#xd;
how far the house was from&#xd;
the   street.&#xd;
&#xd;
The remaining factors were derived from our performance requirements and scaled &#xd;
appropriately based&#xd;
on their effect on the project timeline and ease of integration into the &#xd;
complete system and vision of our&#xd;
project. The results of our trade study can be seen below:&#xd;
&#xd;
Table 1: Trade study for the UAV platform&#xd;
&#xd;
&#xd;
As per our trade study we bought and used BEV FireFly6 UAV for Fall Semester. &#xd;
However by the end of&#xd;
the Fall semester we realized that FireFly6 was the weakest subsystem of our &#xd;
project. We faced several&#xd;
issues  getting  the  UAV  up  and  running.  Primary  reason  for  that  was  &#xd;
using  the  beta  code  from&#xd;
BirdsEyeView  which  in  turn  had  little  documentation  and  compass  &#xd;
compatibility  issues.  Hence  we&#xd;
decided to fall back on our second best option - 3DR X8 Plus for spring &#xd;
semester.&#xd;
&#xd;
5.2  Vision Board Processing&#xd;
&#xd;
As  will  be  depicted  in  the  cyber  physical  architecture,  our  system  &#xd;
has  a  separate  board  for  <Node id="13023"/>obstacle&#xd;
avoidance<Node id="13042"/> and  <Node id="13048"/>visual detection subsystem<Node id="13074"/> so that we can do processing in real &#xd;
time during flight. The&#xd;
second board also allows the system to meet safety requirements by allowing all &#xd;
safety critical functions&#xd;
to   be run on the flight controller which wonâ&#x20ac;&#x2122;t get bogged down by computer &#xd;
vision algorithms.&#xd;
&#xd;
Our main criteria was <Node id="13373"/>processing<Node id="13383"/> speed<Node id="13389"/> and <Node id="13394"/>documentation<Node id="13407"/>. Documentation was &#xd;
critical because the board&#xd;
will have to integrate with the rest of the system and we will be designing &#xd;
this ourselves. As a result,&#xd;
being able to debug errors will ensure that the system functions as a whole. &#xd;
Ports/Interfaces were also&#xd;
critical because they affected how the board interacted with the cameras and &#xd;
the rest of the UAV. Our last&#xd;
criteria was price to ensure we met our project budget.&#xd;
&#xd;
Table 2: Trade study for <Node id="13866"/>microprocessor<Node id="13880"/> (for vision)&#xd;
&#xd;
Raspberry Pi 2 and BeagleBoard-xM tied for the first place. However we ended up &#xd;
using Odroid because&#xd;
of the following reasons:&#xd;
&#xd;
â&#x2014;&#xfffd;    We found out that BeagleBoard-xM were no longer sold. So we would not have &#xd;
any spares which&#xd;
would turn to be a high risk scenario for our project.&#xd;
&#xd;
â&#x2014;&#xfffd;    Our second option Raspberry Pi scored 4/10 in processing power whereas &#xd;
Odroid scored 10/10.&#xd;
Hence we found Odroid to be a better choice.&#xd;
&#xd;
5.3 Sensor Suite&#xd;
&#xd;
<Node id="14360"/>The sensor system<Node id="14377"/> was critical for the <Node id="14399"/>obstacle avoidance<Node id="14417"/> functionality of our &#xd;
UAV. We considered three&#xd;
sensors: <Node id="14476"/>IR sensors<Node id="14486"/>, <Node id="14488"/>Ultrasonic Sensors<Node id="14506"/> and<Node id="14510"/> Lidar<Node id="14516"/>. We developed prototype &#xd;
version of <Node id="14554"/>obstacle<Node id="14562"/> detection<Node id="14572"/>&#xd;
system using all the three sensors. Based one the results of the  tests &#xd;
conducted with the prototypes we&#xd;
finally decided to use Hokuyo UTM-30LX LIDAR sensor for our obstacle avoidance &#xd;
system.&#xd;
&#xd;
The table 3 shows the result of our sensor trade study.&#xd;
&#xd;
&#xd;
&#xd;
Metric&#xd;
&#xd;
Number of&#xd;
sensors required&#xd;
&#xd;
Cost&#xd;
&#xd;
(Cheap, Costly)&#xd;
Detection Range&#xd;
&#xd;
weights&#xd;
&#xd;
1&#xd;
&#xd;
1&#xd;
&#xd;
1&#xd;
&#xd;
IR&#xd;
&#xd;
39&#xd;
&#xd;
Cheap&#xd;
&#xd;
0.5 - 1m&#xd;
&#xd;
Ultrasonic&#xd;
&#xd;
14&#xd;
&#xd;
Cheap&#xd;
1.5m&#xd;
&#xd;
Hokuyo URG -&#xd;
04 LIDAR&#xd;
&#xd;
1&#xd;
&#xd;
Costly&#xd;
4m&#xd;
&#xd;
Hokuyo UTM-&#xd;
30lx LIDAR&#xd;
&#xd;
1&#xd;
&#xd;
Costly&#xd;
30m&#xd;
&#xd;
&#xd;
Other                      1                 -&#xd;
&#xd;
Total                      5                 -1&#xd;
&#xd;
Red = -1 point&#xd;
Green = +1 point&#xd;
&#xd;
Interference issue&#xd;
&#xd;
0&#xd;
&#xd;
Does not&#xd;
function outdoor&#xd;
&#xd;
0&#xd;
&#xd;
Works outdoor&#xd;
Can borrow one&#xd;
from another Lab&#xd;
&#xd;
2&#xd;
&#xd;
Table 3: Trade study for sensor suite (for obstacle avoidance)&#xd;
&#xd;
6.  Cyber Physical Architecture&#xd;
&#xd;
The  high-level  cyber  physical  architecture  can  best  be  understood  by  &#xd;
Figure  5.  On  a  high-level,  the&#xd;
system can be broken down into three major categories: mechanical components, &#xd;
electrical components,&#xd;
and  software.  The  electrical  components  are  the  bridge  between  the  &#xd;
software  and  the  mechanical&#xd;
actuation.&#xd;
&#xd;
The  obstacle  avoidance  and  vision  system  architecture  show  the  flow  &#xd;
of  information  between  the&#xd;
software, electrical and mechanical components for their corresponding systems.&#xd;
&#xd;
&#xd;
&#xd;
6.1  Mechanical System&#xd;
&#xd;
Figure 5: Cyber Physical Architecture Diagram&#xd;
&#xd;
We  are  using  3DR  X-8+  UAV  for  our  project.  The  mechanical  system  of &#xd;
 our  project  consists  of  the&#xd;
<Node id="16202"/>propulsion system<Node id="16219"/> and the <Node id="16228"/>gripper<Node id="16235"/>. <Node id="16237"/>The propulsion system is part of the 3DR kit &#xd;
that we purchased but&#xd;
must  be  <Node id="16317"/>controlled<Node id="16327"/>  appropriately  by  our  software.<Node id="16362"/>  The  <Node id="16369"/>gripper<Node id="16376"/>  is  made &#xd;
 by  NicaDrone  --  an  electro-&#xd;
permanent magnet [2]. This gripper is the interface between the vehicle and the &#xd;
<Node id="16505"/>package<Node id="16512"/> and must allow&#xd;
the<Node id="16532"/> <Node id="16533"/>package<Node id="16540"/> to be <Node id="16547"/>dropped off<Node id="16558"/> upon arriving at the destination<Node id="16591"/>. It will be &#xd;
controlled by our flight control&#xd;
system which is the brain of the <Node id="16673"/>UAV<Node id="16676"/>.&#xd;
&#xd;
6.2  <Node id="16686"/>Electrical System<Node id="16703"/>&#xd;
&#xd;
The  <Node id="16712"/>electrical  system<Node id="16730"/>  is  composed  on  a  high-level  by  the  flight  &#xd;
control  board,  the  vision  subsystem&#xd;
hardware, sensors, and the communications hardware. The <Node id="16881"/>flight controller<Node id="16898"/> is &#xd;
Pixhawk [1] the brain of the&#xd;
entire system and <Node id="16952"/>runs<Node id="16956"/> all critical flight control software<Node id="16993"/>. <Node id="16995"/>The<Node id="16998"/> flight &#xd;
controller<Node id="17018"/> interacts<Node id="17028"/> with two sensors&#xd;
on the vehicle<Node id="17061"/>: the<Node id="17066"/> IMU<Node id="17070"/> and <Node id="17075"/>GPS<Node id="17078"/>. <Node id="17080"/>The<Node id="17083"/> flight controllers<Node id="17102"/> <Node id="17103"/>takes commands<Node id="17117"/> from the &#xd;
main processing board&#xd;<Node id="17151"/>
which directs it to avoid obstacles and land on visual markers. The output from &#xd;
the flight controller goes&#xd;
to the motor controller and is then converted into appropriate signals to &#xd;
control the propulsion system.&#xd;
&#xd;
Odroid[3] - microprocessor for running visual algorithms connects to the camera &#xd;
and Lidar on board the&#xd;
UAV. Odroid runs vision and obstacle detection algorithms and outputs the &#xd;
result to the flight controller.&#xd;
&#xd;
&#xd;
6.3  Software&#xd;
&#xd;
Figure 6:  Software architecture of the system&#xd;
&#xd;
The software of the system comprises of 2 main levels. The lower level  control &#xd;
is implemented in the&#xd;
<Node id="17764"/>flight controller<Node id="17781"/>.<Node id="17782"/> This<Node id="17787"/> runs <Node id="17793"/>the control environment to <Node id="17820"/>monitor<Node id="17827"/> the position &#xd;
and orientation of the UAV to&#xd;
maintain stable flight<Node id="17896"/>. It uses the <Node id="17910"/>GPS<Node id="17913"/>, <Node id="17915"/>Compass<Node id="17922"/>, <Node id="17924"/>IMU<Node id="17927"/> and a <Node id="17934"/>Barometer<Node id="17943"/> as &#xd;
sensors.&#xd;
&#xd;
The<Node id="17964"/> higher level contro<Node id="17984"/>l <Node id="17986"/>runs<Node id="17990"/> the application specific program and controls the &#xd;
UAV through the lower&#xd;
level control. It<Node id="18083"/> interfaces<Node id="18094"/> with the<Node id="18103"/> camera<Node id="18110"/> and the<Node id="18118"/> Lidar<Node id="18124"/>.<Node id="18125"/> It <Node id="18129"/>runs<Node id="18133"/> the &#xd;
behavior program in addition to the&#xd;
vision processing algorithms (AprilTag detection), obstacle detection and &#xd;
planning algorithms.&#xd;<Node id="18274"/>
&#xd;
7. System Description and Evaluations&#xd;
&#xd;
7.1  System and Subsystem Descriptions&#xd;
&#xd;
Figure 7: System architecture with all components&#xd;
&#xd;
&#xd;
Figure 8: Image depicting UAV with all system components&#xd;
&#xd;
The system consists of multiple subsystems. The 3DR X8+ is the UAV body. It &#xd;
comes with the Pixhawk&#xd;
<Node id="18577"/>Flight controller<Node id="18594"/> [1] which is responsible for<Node id="18623"/> <Node id="18624"/>maintaining<Node id="18635"/> the stability while &#xd;
flying the drone<Node id="18674"/>.<Node id="18675"/> It <Node id="18679"/>receives&#xd;<Node id="18688"/>
commands  from <Node id="18704"/> the  main  processor<Node id="18725"/>,  Odroid[3],  which  runs  the  &#xd;
application  specific  algorithms.<Node id="18794"/>  The&#xd;
details   of the subsystems are given below:&#xd;
&#xd;
7.1.1<Node id="18854"/> Behaviour Subsystem&#xd;<Node id="18875"/>
&#xd;
The  behavior  subsystem  is  responsible  in <Node id="18924"/> orchestrating<Node id="18938"/>  the  various  &#xd;
subsystems  towards  the  mission  of&#xd;
package delivery.<Node id="19012"/> It <Node id="19016"/>decides<Node id="19023"/> which subsystems should function at which stages &#xd;
in the mission and how the&#xd;
outputs from them flow to other subsystems<Node id="19145"/>. It runs on the Odroid[3].&#xd;
&#xd;
7.1.1.1 State machine formulation&#xd;
&#xd;
A simple state machine is used here. Every state denotes a unique stage of the &#xd;
system and determines the&#xd;
associated process and subsystems that must be functioning at that stage.&#xd;
&#xd;
Figure 9: State Machine for Behavior control&#xd;
&#xd;
As seen in Figure 9 above, the following states are used with the corresponding &#xd;
functionalities:&#xd;
&#xd;
&#xd;
â&#x2014;&#xfffd;    State -1: <Node id="19567"/>Idle<Node id="19571"/>.&#xd;
&#xd;
â&#x2014;&#xfffd;    State 0:<Node id="19591"/> <Node id="19592"/>Take off<Node id="19600"/> from current location<Node id="19622"/>.&#xd;
&#xd;
â&#x2014;&#x2039;   <Node id="19633"/> <Node id="19634"/>Navigation<Node id="19644"/> is<Node id="19647"/> blocking<Node id="19656"/> until <Node id="19663"/>height is achieved.&#xd;
&#xd;<Node id="19685"/>
â&#x2014;&#x2039;   <Node id="19692"/> Vision subsystem<Node id="19709"/> inactive<Node id="19718"/>.&#xd;
&#xd;
â&#x2014;&#xfffd;    State 1: Move to Waypoint - House or Truck GPS position&#xd;
&#xd;
â&#x2014;&#x2039;   <Node id="19795"/> Navigation<Node id="19806"/> is<Node id="19809"/> blocking<Node id="19818"/> until<Node id="19824"/> waypoint<Node id="19833"/> is <Node id="19837"/>reached<Node id="19844"/>.&#xd;
&#xd;
â&#x2014;&#x2039;    Vision subsystem is inactive.&#xd;
&#xd;
â&#x2014;&#xfffd;    State 2: Search for marker&#xd;
&#xd;
â&#x2014;&#x2039;    <Node id="19933"/>Navigation<Node id="19943"/> is <Node id="19947"/>blocking<Node id="19955"/> on individual goals for the search path&#xd;<Node id="19996"/>
&#xd;
â&#x2014;&#x2039;   <Node id="20005"/> <Node id="20006"/>Vision   subsystem<Node id="20024"/>   is  <Node id="20031"/> active<Node id="20038"/>   -   <Node id="20045"/>Updated   position<Node id="20063"/>   goals   are   &#xd;
generated   and   override&#xd;
waypoints.&#xd;<Node id="20121"/>
&#xd;
â&#x2014;&#xfffd;    State 3: Marker found. Descend.&#xd;
&#xd;
â&#x2014;&#x2039;   <Node id="20172"/> <Node id="20173"/>Vision subsystem<Node id="20189"/> maintains<Node id="20199"/> position in X and Y.&#xd;<Node id="20221"/>
&#xd;
â&#x2014;&#x2039;    Z  position  is  reduced  as  and  when  the  position  is  held  well  &#xd;
over  the  marker,  until  a&#xd;
threshold minimum height is attained&#xd;
&#xd;
â&#x2014;&#x2039;  <Node id="20380"/>  <Node id="20382"/>Navigation<Node id="20392"/> is <Node id="20396"/>non-blocking<Node id="20408"/>. Position updates from the marker detection &#xd;
system override&#xd;
waypoints.&#xd;
&#xd;
â&#x2014;&#xfffd;    State 4: Final Descend/Landing.&#xd;
&#xd;
â&#x2014;&#x2039;    Remembers the <Node id="20549"/>filtered marker location<Node id="20573"/> and continues descend on that &#xd;
position without&#xd;
continuous updates&#xd;
&#xd;
â&#x2014;&#x2039;   <Node id="20652"/> <Node id="20653"/>Vision subsystem<Node id="20669"/> is <Node id="20673"/>inactive<Node id="20681"/>.&#xd;
&#xd;
â&#x2014;&#xfffd;    State 5: Drop package.&#xd;
&#xd;
â&#x2014;&#x2039;    Initiates <Node id="20736"/>drop off<Node id="20744"/> of the <Node id="20752"/>package<Node id="20759"/>&#xd;
&#xd;
â&#x2014;&#xfffd;    State 9: <Node id="20779"/>Destination marker<Node id="20797"/> <Node id="20798"/>not available<Node id="20811"/>. Safe <Node id="20818"/>landing<Node id="20825"/>&#xd;
&#xd;
â&#x2014;&#x2039;    Calls  states  1  and  4  in  emergency  mode  for  reaching  a  &#xd;
predefined  safe  waypoint  and&#xd;
safely landing there.&#xd;
&#xd;
7.1.1.2 Search Patterns&#xd;
&#xd;
A few search patterns were realized and tested. The formulations used were &#xd;
parametric with the following&#xd;
parameters:&#xd;
&#xd;
â&#x2014;&#xfffd;    View area: The area seen by the camera. Values used: 2m x 2m (at 15m &#xd;
height)&#xd;
&#xd;
â&#x2014;&#xfffd;    Area  to  be  searched. The area to  be  searched  around  the  GPS  &#xd;
position  of the house  while  the&#xd;
house is at the center. Values used: 8m x 6m.&#xd;
&#xd;
The following search patterns were tested (figure 10):&#xd;
&#xd;
&#xd;
Figure 10: Search patterns tested for marker search&#xd;
The lawnmower search pattern was finally used as it was robust and simple.&#xd;
&#xd;
7.1.2<Node id="21559"/> Flight Control Subsystem&#xd;<Node id="21585"/>
&#xd;
Flight  control  was  done  using  the  Pixhawk  flight  controller  [1],  &#xd;
running  the  PX4  firmware.  State&#xd;
estimation was done using the <Node id="21732"/>IMU<Node id="21735"/>, <Node id="21737"/>GPS<Node id="21740"/>, <Node id="21742"/>Compass<Node id="21749"/>,<Node id="21750"/> Barometer<Node id="21760"/> and<Node id="21764"/> Lidar<Node id="21770"/> lite range &#xd;
sensor.&#xd;
&#xd;
Pixhawk internally uses feedforward and PID feedback control for waypoint &#xd;
following. Mavros [6] is a&#xd;
ROS layer over MAVlink, the communication link with Pixhawk. It exposes an API &#xd;
for controlling the&#xd;
UAV in the OFFBOARD mode. As seen in figure 6 (Software architecture), the &#xd;
Odroid runs this Mavros&#xd;
layer and uses the following API for controlling the UAV in different &#xd;
situations:&#xd;
&#xd;
â&#x2014;&#xfffd;   <Node id="22196"/> Position set-points<Node id="22216"/>:<Node id="22217"/> <Node id="22218"/>Publish<Node id="22225"/> to ROS topic /mavros/setpoint_position&#xd;<Node id="22265"/>
&#xd;
â&#x2014;&#xfffd;    Velocity commands:<Node id="22293"/> Publish to ROS topic: /mavros/setpoint_velocity/cmd_vel&#xd;<Node id="22350"/>
&#xd;
â&#x2014;&#xfffd;    Odometry from UAV:<Node id="22378"/> <Node id="22379"/>Subscribe<Node id="22388"/> to ROS topic: /mavros/local_position/odom&#xd;<Node id="22431"/>
&#xd;
â&#x2014;&#xfffd;    Position from UAV: <Node id="22460"/>S<Node id="22461"/>ubscribe<Node id="22469"/> to ROS topic: /mavros/local_position/pose&#xd;
&#xd;<Node id="22514"/>
â&#x2014;&#xfffd;    Actuator Control: (for Gripper subsystem) Publish to &#xd;
/mavros/actuator_control&#xd;
&#xd;
â&#x2014;&#xfffd;  <Node id="22610"/> <Node id="22611"/> Mode switching<Node id="22626"/>: Command ROS service mavros/set_mode&#xd;
The following modes were used:&#xd;
&#xd;
â&#x2014;&#xfffd;    OFFBOARD: For controlling positions/velocities using the Odroid.&#xd;
&#xd;
â&#x2014;&#xfffd;    Auto.LAND: For autonomous landing.&#xd;
&#xd;
7.1.3 <Node id="22825"/>Vision Subsystem&#xd;<Node id="22842"/>
&#xd;
The  vision  subsystem  is  responsible  for <Node id="22890"/> <Node id="22891"/>detecting<Node id="22900"/>  the  marker<Node id="22913"/>  and  &#xd;
<Node id="22922"/>guiding<Node id="22929"/>  the  <Node id="22936"/>UAV<Node id="22939"/>  for  a  precision&#xd;
landing<Node id="22967"/>. It consists of a simple webcam, the Logitech C720 connected to the &#xd;
main processor, the Odroid&#xd;
XU4[3].&#xd;
&#xd;
After conducting trade study between different markers, AprilTags were selected &#xd;
due to their precision&#xd;
detection, and reasonable speed. In the current state, the AprilTags were not &#xd;
directly usable as markers&#xd;
due     to range and speed limitations. The following upgrades were made:&#xd;
&#xd;
&#xd;
7.1.3.2  Range - Nested AprilTags&#xd;
&#xd;
Figure 11: Nested AprilTag marker. Outer AprilTag can be seen from far-off &#xd;
distances, and the inner one&#xd;
from nearby distances. (Tag id 166 outer, 138 inner, rotated -45 degrees)&#xd;
&#xd;
As the marker had to be detected from a high height (around 15-20m), the &#xd;
AprilTag marker needed the&#xd;
side length to be<Node id="23711"/> 58cm<Node id="23716"/>. But then, it was not possible to detect the marker &#xd;
below<Node id="23776"/> 2m height<Node id="23786"/>. As a result, we&#xd;
developed Nested AprilTag makers (Figure 11). They consist of a bigger outer &#xd;
marker with a certain Tag&#xd;
ID, and a smaller inner AprilTag with a different Tag ID.  The inner tag is &#xd;
one-tenth the size of the outer&#xd;
tag and is rotated 45 degrees counter-clockwise, to ensure it does not &#xd;
interfere with the detection of the&#xd;
outer marker.&#xd;
&#xd;
Different sizes of nested tags were tested to determine upto what ranges they &#xd;
can be detected.&#xd;
&#xd;
&#xd;
S.No.&#xd;
&#xd;
1&#xd;
&#xd;
2&#xd;
&#xd;
3&#xd;
&#xd;
Detection distances for different nested April Tag markers&#xd;
Outer April Tag                                          Inner April Tag&#xd;
&#xd;
Size                           <Node id="24442"/>Range<Node id="24447"/>                          <Node id="24473"/>Size<Node id="24477"/>              &#xd;
           Range&#xd;
3.6cm                   8 cm to 1.8m                  0.36 cm                 &#xd;
Not detected&#xd;
14.4cm                 40 cm to 7.2m                 1.44 cm                4 &#xd;
cm to 50cm&#xd;
57.5cm                  1.6 m to 30m                  5.75 cm                 &#xd;
16 cm to 2m&#xd;
&#xd;
Table 4. Table depicting tested size-range relationships for nested AprilTags.&#xd;
&#xd;
Based on our requirements we chose the 57.5cm Nested April Tag for our &#xd;
application.&#xd;
&#xd;
7.1.3.3  <Node id="24972"/>Speed<Node id="24977"/> - Detection to Tracking&#xd;
&#xd;
The most important part of the <Node id="25036"/>vision system<Node id="25049"/> is the<Node id="25056"/> marker detection algorithm<Node id="25083"/> &#xd;
which detects the markers&#xd;
in the image. These algorithms needed to be robust to noise as the environment &#xd;
around the house may be&#xd;
cluttered, but they also need to be <Node id="25255"/>fast<Node id="25259"/> so that fast updates can be sent to &#xd;
the control algorithms after state&#xd;
estimation.&#xd;
&#xd;
After trying multiple algorithms and markers, we finally settled with an &#xd;
AprilTag detection algorithm as&#xd;
developed by University of Michigan [7] and its C++ version as developed in MIT &#xd;
[8].&#xd;
&#xd;
&#xd;
Figure 12. Flowchart showing the April Tag detection algorithm interspersed &#xd;
with the Lucas-Kanade&#xd;
tracking Algorithm&#xd;
&#xd;
The April Tag detection gives up to 8 fps on the Odroid. This rate is too slow &#xd;
for controlling the UAV. As&#xd;
a workaround, we tried to combine the April Tag detection with Lucas-Kanade &#xd;
tracking algorithm. The&#xd;
basic idea of the same is illustrated in the flowchart [Figure 12].&#xd;
&#xd;
We  use  the  April  Tag  detection  as  the  primary  algorithm.  After  the  &#xd;
first  frame  in  which  the  tag  is&#xd;
detected, the features were obtained from this frame and tracked in the &#xd;
following frames using the Lucas&#xd;
Kanade  tracking.  Currently,  only  the  four  corner  points  of  the  tag  &#xd;
are  used  as  features,  as  they  are&#xd;
minimum set required to calculate the pose of the April Tag. The output &#xd;
obtained from the tracking results&#xd;
was be verified for correctness*. In case no tag is obtained or the tag &#xd;
obtained is incorrect, we shifted&#xd;
back to the April Tag detection for the next frame. As tracking results may &#xd;
start deviating from the actual&#xd;
detections,  it  is  a  good  idea  to  refresh  the  estimates  using  the  &#xd;
April  Tag  detection  once  every  few&#xd;
frames**.&#xd;
&#xd;
*correctness of the tag can be verified in multiple ways: (the basic version &#xd;
has been tested to be a good&#xd;
enough measure of correctness)&#xd;
&#xd;
â&#x2014;&#xfffd;    Basic: verify that the tracked points form a sensible quadrilateral.&#xd;
&#xd;
â&#x2014;&#xfffd;    Advanced: also include using the decoding logic of AprilTags to verify the &#xd;
tag&#xd;
&#xd;
**use a refresh time (or number of  frames) after which the full detection is &#xd;
run to refresh the tracking&#xd;
results. This is done as the tracking results can deviate due to errors and &#xd;
occlusions. A refresh every 30-60&#xd;
frames gives a good output.&#xd;
&#xd;
These algorithms were tested for speed on the laptop and the Odroid [3]. The &#xd;
speeds have been compared&#xd;
in Table 5.&#xd;
&#xd;
&#xd;
Algorithm&#xd;
&#xd;
April Tag detection&#xd;
&#xd;
Lucas Kanade Tracking&#xd;
(Only tracking)&#xd;
&#xd;
Merged&#xd;
&#xd;
(LK + April Tag detection)&#xd;
&#xd;
FPS on Laptop&#xd;
(i3 4th gen)&#xd;
&#xd;
14&#xd;
&#xd;
30&#xd;
&#xd;
29&#xd;
&#xd;
FPS on Odroid&#xd;
(Quad core ARM)&#xd;
8&#xd;
&#xd;
29&#xd;
&#xd;
28&#xd;
&#xd;
Table 5: Table listing the comparison for individual algorithms with the &#xd;
combined algorithm&#xd;
&#xd;
The resulting FPS can be taken up to around 29fps on the Odroid, which makes &#xd;
the state estimation and&#xd;
subsequent control possible. A few tracking results can be seen in these &#xd;
videos.&#xd;
&#xd;
â&#x2014;&#xfffd;    Marker Detection Test #1 [https://youtu.be/zJ2rNg4Q4Vc]&#xd;
&#xd;
â&#x2014;&#xfffd;    Marker Detection Test #2 [https://youtu.be/0qn28RghF_o]&#xd;
&#xd;
â&#x2014;&#xfffd;    Marker Detection Test #3 [https://youtu.be/5TkUyuMBI2E]&#xd;
&#xd;
7.1.4 <Node id="28165"/>Obstacle Avoidance Subsystem&#xd;<Node id="28194"/>
&#xd;
The  flow  chart  (figure  13)  shown  below  describes  the  functional  &#xd;
blocks  of  the  obstacle  avoidance&#xd;
subsystem&#xd;
&#xd;
Figure 13: Flowchart depicting the functional blocks of the obstacle avoidance &#xd;
subsystem&#xd;
&#xd;
7.1.4.1  <Node id="28427"/>LIDAR&#xd;<Node id="28433"/>
&#xd;
We use Hokuyo UTM-30LX LIDAR [4] for obstacle detection. It has a detection &#xd;
<Node id="28514"/>range of 30m and 270&#xd;<Node id="28535"/>
degree scanning range.&#xd;
&#xd;
Image 1: Hokuyo UTM-30LX LIDAR. Image source: http://electronicdesign.com&#xd;
&#xd;
&#xd;
7.1.4.2  <Node id="28650"/>Filter<Node id="28656"/>:&#xd;
&#xd;
In sunlight the lidar sensor picks up noise due to IR interference. This noise &#xd;
is detection of obstacles even&#xd;
when  there  are  no  obstacles  in  front  of  the  sensor.  As  shown  in  &#xd;
figure  14,  the  red  spots  are  noisy&#xd;
unfiltered output from the lidar. To get rid of this issue we use combination &#xd;
of the Median Filter and the&#xd;
Range Filter. The range filter<Node id="29035"/> discards<Node id="29044"/> the sensor readings beyond <Node id="29072"/>4m distance<Node id="29083"/>. &#xd;
Median filter takes the&#xd;
median  of  25  observations  and  helps  reduce  the  noise.   In  figure  14, &#xd;
 the  2  green  dots  are  the  filtered&#xd;
output of the lidar data.&#xd;
&#xd;
Figure 14: The figure shows the rviz visualization of one of the test run of &#xd;
the UAV. The red lines are the&#xd;
positions  of  the  UAV.  The  black  spots  are  the  recorded  obstacles  in  &#xd;
the  cost  map  generated  by  the&#xd;
navigation stack as described in the next section. The red spots are the noisy &#xd;
unfiltered output from our&#xd;
previous indoor sensor. The 2 green dots are the filtered output. As seen the &#xd;
noise is greatly reduced by&#xd;
median and range filter.&#xd;
&#xd;
7.1.4.3 Navigation Stack, ROS&#xd;
&#xd;
<Node id="29773"/>ROS  Navigation  Stack<Node id="29795"/>  <Node id="29797"/>takes  in<Node id="29806"/>  information  from  odometry,  sensor  &#xd;
stream,  start  pose  &amp;  goal  pose  to&#xd;

<Node id="29890"/>output<Node id="29896"/> safe velocity commands for the robot. ROS Navigation Stack is developed &#xd;
for 2D navigation. We&#xd;
tweaked it for our application. As a prerequisite, navigation stack takes &#xd;
following inputs:&#xd;
&#xd;
â&#x2014;&#xfffd;    Coordinate Frame information using tf&#xd;
&#xd;
â&#x2014;&#xfffd;    Sensor_msgs/LaserScan message from LIDAR&#xd;
&#xd;
â&#x2014;&#xfffd;    Odometry information using tf and nav_msgs/Odometry messages&#xd;
&#xd;
As an output the stack gives velocity commands on  /cmd_vel  topic.  The &#xd;
navigation stack contains the&#xd;
following parts:&#xd;
&#xd;
â&#x2014;&#xfffd;    Local costmap &amp; Global costmap - Navigation stack maintains two costmap.&#xd;
&#xd;
â&#x2014;&#xfffd;    Global path planner â&#x20ac;&#x201c; It uses the global costmap to compute paths ignoring &#xd;
the kinematic and&#xd;
dynamic vehicle constraints. It uses Dijkstraâ&#x20ac;&#x2122;s algorithm to do this.&#xd;
&#xd;
&#xd;
â&#x2014;&#xfffd;    Local  path  planner  â&#x20ac;&#x201c;  It  accounts  for  the  kinematic  and  dynamic  &#xd;
vehicle  constraints  and&#xd;
generates feasible local trajectories in real time while avoiding obstacles &#xd;
using the local costmap.&#xd;
We use Dynamic Window Approach local planner.&#xd;
&#xd;
â&#x2014;&#xfffd;    Move_base â&#x20ac;&#x201c; Implements the state machine&#xd;
&#xd;
Figure  15:  The  figure  show  the  rviz  visualization  of  the  navigation  &#xd;
stack.  The  back  spots  depict  the&#xd;
obstacles in local and global costmap. The red lines are the positions of the &#xd;
UAV. The green line is the&#xd;
global plan generated by the navigation stack. Local plan is not clearly &#xd;
visible in the figure as it is a very&#xd;
small path near the UAV base generating plan for the next 2/3 seconds for the &#xd;
UAV.&#xd;
&#xd;
Navigation stack has lot of parameters to tune. These parameters include robot &#xd;
configuration parameters -&#xd;
maximum,  minimum  linear  velocities,  rotational  velocities,  linear  &#xd;
acceleration,  rotational  acceleration,&#xd;
goal  tolerance  parameters  -  path  distance  bias,  goal  distance  biases,  &#xd;
trajectory  scoring  parameters,&#xd;
raytracing and others [14]. We tuned these parameters for our system.&#xd;
&#xd;
7.1.4.4 UAV State Extimation&#xd;
&#xd;
UAVâ&#x20ac;&#x2122;s  flight  controller-Pixhawk[1]  gets  velocity  commands  from the  &#xd;
navigation  stack  running  on  the&#xd;
odroid through the Mavros [6]. Pixhawk passes velocity commands to the motors &#xd;
and runs its own state&#xd;
estimation EKF filter to estimate its current position. This odometry data is &#xd;
then passed to the Odometry&#xd;
Convertor.&#xd;
&#xd;
7.1.4.4 Odometry Convertor&#xd;
&#xd;
The Pixhawk outputs 3D odometry data. As mentioned above the Navigation Stack &#xd;
is designed for 2D&#xd;
navigation and requires 2D odometry data. This means that the robot should &#xd;
always have z=0 or it doesn't&#xd;
generate  correct  velocity  outputs.  Hence  we  use  a  ros  node  which  &#xd;
receives  3D  odometry  data  from&#xd;
pixhawk and converts it into 2D odometry data.&#xd;
&#xd;
&#xd;
7.1.5 Gripper Subsystem&#xd;
&#xd;
The gripper subsystem is responsible for holding the package firmly while it is &#xd;
being delivered. It should&#xd;
be able to engage to grip the package and disengage to let it drop.&#xd;
&#xd;
Image 2: NicaDrone Electro-Permanent Magnet                     Image 3: &#xd;
Package&#xd;
&#xd;
The NicaDrone Electro-Permanent magnet (EPM) [2] is used as the gripper (Image &#xd;
2). This is an electro-&#xd;
permanent magnet that can engage a permanent magnet to stick to a package with &#xd;
a small steel plate on&#xd;
the    top. (Image 3). When disengaged, the magnetic field is removed, letting &#xd;
the package fall down due to&#xd;
gravity.&#xd;
&#xd;
The EPM is controlled through the pixhawk, using the Actuator control mode &#xd;
through mavros. A simple&#xd;
command to engage the EPM needs to be sent when attaching the package, and &#xd;
another similar command&#xd;
to disengage.&#xd;
&#xd;
7.2  Subsystem Modelling, Testing and Analysis&#xd;
&#xd;
7.2.1 Flight Control Subsystem&#xd;
&#xd;
The accuracy of the system primarily depends on the state estimation, which &#xd;
relies heavily on the GPS&#xd;
position estimates for the UAV.&#xd;
&#xd;
Based on our testing, the health of the GPS depends on the area of flight. &#xd;
Areas surrounded with buildings&#xd;
usually have degraded GPS availability and hence lower accuracy in state &#xd;
estimation. After taking a few&#xd;
minutes to gather GPS connections, in a clear environment, the state estimation &#xd;
was accurate up to 60cm.&#xd;
&#xd;
&#xd;
Image 4: shows the deviations in the position of the UAV while trying to hold &#xd;
position.&#xd;
&#xd;
7.2.2 Vision Subsystem&#xd;
&#xd;
The testing system was tried in multiple conditions to test for robustness and &#xd;
error.  Following were some&#xd;
of the inferences drawn:&#xd;
&#xd;
â&#x2014;&#xfffd;    With  different  lighting  conditions,  exposure  adjustments  are  &#xd;
required.  Automatic  exposure&#xd;
control is unable to handle cases with direct sunlight on the marker.&#xd;
&#xd;
â&#x2014;&#xfffd;    Marker is detected and tracked with high precision in all orientations &#xd;
(roll, pitch and yaw).&#xd;
&#xd;
â&#x2014;&#xfffd;    The primary constraint for finding error in X,Y,Z values has been the &#xd;
calibration of the setup to&#xd;
obtain ground truth.&#xd;
&#xd;
â&#x2014;&#xfffd;    Errors in X,Y,Z offsets were recorded and plotted (Figure 16). An error of &#xd;
&lt;5% from the distance&#xd;
to  the  marker  is  seen  in  each  X,Y  and  Z.  These  results  exceeds  the &#xd;
 expectations  set  in  the&#xd;
requirements (10%).&#xd;
&#xd;
As viewed from the camera, X axis is the camera view axis, Y axis is sideways &#xd;
axis (longer side in the&#xd;
image captured) and Z axis is the upwards axis (shorter side in the image &#xd;
captured).&#xd;
&#xd;
Figure 16: Graph depicting error in detection distances to Marker&#xd;
&#xd;
&#xd;
7.2.3 Obstacle Avoidance Subsystem&#xd;
&#xd;
The requirement of our project is for the UAV to avoid obstacles of size 1.5m X &#xd;
0.5m.&#xd;
&#xd;
Figure 17: The figure shows the UAV and a test obstacle brought in front of it.&#xd;
&#xd;
Image 5: Rviz visualization of the UAV avoiding obstacles&#xd;
&#xd;
For the various tests that we carried out this are the results we obtained:&#xd;
&#xd;
&#xd;
Attributes&#xd;
&#xd;
Minimum distance maintained between the UAV and obstacles&#xd;
Distance at which UAV starts to avoid obstacle&#xd;
&#xd;
Obtained result&#xd;
&#xd;
80 cm&#xd;
&#xd;
100 cm&#xd;
&#xd;
Table 6: Obstacle Avoidance test results&#xd;
&#xd;
&#xd;
7.3  System Performance Evaluation against Spring Validation Experiment&#xd;
&#xd;
Full system demonstration video can be seen here &#xd;
https://www.youtube.com/watch?v=vT5HnfHKzuY&#xd;
&#xd;
7.3.1 Package delivery without obstacles&#xd;
&#xd;
A 9.5â&#x20ac;&#xfffd; x 6.5â&#x20ac;&#xfffd; x 2.2â&#x20ac;&#xfffd; package weighing 200g was delivered 30cm from the center &#xd;
of the marker. The UAV&#xd;
took off from a starting position around 25m away from the house and landed &#xd;
back on a the truck position&#xd;
another 20m away from the house.&#xd;
&#xd;
&#xd;
Performance Criterion&#xd;
&#xd;
P.1: Package drop accuracy.&#xd;
&#xd;
Required&#xd;
&#xd;
Less than 2m&#xd;
&#xd;
Achieved&#xd;
&#xd;
30cm&#xd;
&#xd;
Fulfilled?&#xd;
&#xd;
Yes&#xd;
&#xd;
&#xd;
P.2: UAV flight time&#xd;
&#xd;
At least 10 minutes&#xd;
&#xd;
10 minutes&#xd;
&#xd;
Yes&#xd;
&#xd;
&#xd;
P.3: Package weight requirements&#xd;
&#xd;
At least 100g&#xd;
&#xd;
200g&#xd;
&#xd;
Yes&#xd;
&#xd;
&#xd;
P.4: Package size requirements&#xd;
&#xd;
9.5â&#x20ac;&#xfffd; x 6.5â&#x20ac;&#xfffd; x 2.2â&#x20ac;&#xfffd;&#xd;
&#xd;
9.5â&#x20ac;&#xfffd; x 6.5â&#x20ac;&#xfffd; x&#xd;
&#xd;
2.2â&#x20ac;&#xfffd;&#xd;
&#xd;
Yes&#xd;
&#xd;
Table 7: Performance comparison for system performance requirements (P5-P7 were &#xd;
environment&#xd;
requirements)&#xd;
&#xd;
7.3.1 Package delivery without obstacles&#xd;
&#xd;
A 9.5â&#x20ac;&#xfffd; x 6.5â&#x20ac;&#xfffd; x 2.2â&#x20ac;&#xfffd; package weighing 200g was delivered 80cm from the center &#xd;
of the marker. The UAV&#xd;
took off from a starting position around 12m away from the house and landed &#xd;
back on a the truck position&#xd;
another 20m away from the house.&#xd;
&#xd;
&#xd;
Performance Criterion&#xd;
&#xd;
P.1: Package drop accuracy.&#xd;
&#xd;
Required&#xd;
&#xd;
Less than 2m&#xd;
&#xd;
Achieved&#xd;
&#xd;
80cm&#xd;
&#xd;
Fulfilled?&#xd;
&#xd;
Yes&#xd;
&#xd;
&#xd;
P.2: UAV flight time&#xd;
&#xd;
At least 10 minutes&#xd;
&#xd;
10 minutes&#xd;
&#xd;
Yes&#xd;
&#xd;
&#xd;
P.3: Package weight requirements&#xd;
&#xd;
At least 100g&#xd;
&#xd;
200g&#xd;
&#xd;
Yes&#xd;
&#xd;
&#xd;
P.4: Package size requirements&#xd;
&#xd;
9.5â&#x20ac;&#xfffd; x 6.5â&#x20ac;&#xfffd; x 2.2â&#x20ac;&#xfffd;&#xd;
&#xd;
9.5â&#x20ac;&#xfffd; x 6.5â&#x20ac;&#xfffd; x&#xd;
&#xd;
2.2â&#x20ac;&#xfffd;&#xd;
&#xd;
Yes&#xd;
&#xd;
&#xd;
P.8 Obstacles are avoided.&#xd;
&#xd;
Size 0.5m x 1.5m&#xd;
&#xd;
Avoided&#xd;
&#xd;
Yes&#xd;
&#xd;
Table 8: Performance comparison for system performance requirements (P5-P7 were &#xd;
environment&#xd;
requirements)&#xd;
&#xd;
&#xd;
7.4  System Strengths and Weaknesses&#xd;
&#xd;
Overall system performance is strong and robust. Package delivery without &#xd;
obstacles is stable and&#xd;
repeatable. Obstacle avoidance has issues related to field of view.&#xd;
&#xd;
Detailed strengths and weaknesses of the subsystems are listed in table 9.&#xd;
&#xd;
&#xd;
Subsystem&#xd;
Vision&#xd;
Behaviour&#xd;
Flight  Control&#xd;
Gripper&#xd;
&#xd;
Obstacle Avoidance&#xd;
&#xd;
Overall&#xd;
Strong&#xd;
Strong&#xd;
Strong&#xd;
Strong&#xd;
Neutral&#xd;
&#xd;
Strengths&#xd;
&#xd;
Precise and Accurate&#xd;
Robust&#xd;
&#xd;
Accurate and Robust&#xd;
Firm and quick&#xd;
Responsive and accurate&#xd;
&#xd;
Weaknesses&#xd;
&#xd;
Manual exposure control&#xd;
&#xd;
Drift during yaw velocity control&#xd;
Package blows away after drop&#xd;
&#xd;
Low field of view. May hit obstacles&#xd;
not in view.&#xd;
&#xd;
Table 9: Strengths and Weaknesses of the subsystems&#xd;
&#xd;
8.  Project Management&#xd;
&#xd;
The following section outlines the high-level Work Breakdown Structure and &#xd;
schedule. For this project,&#xd;
we  made  a  concerted  effort  to  integrate  existing  technologies  wherever &#xd;
 appropriate.  To  ensure  project&#xd;
success, great attention has been given to integration testing leading toward a &#xd;
full scenario test. The work&#xd;
for  this  project  has  been  broken  down  at  the  highest  level  into  &#xd;
Systems  Engineering,  Fabrication  and&#xd;
Procurement, Systems Integration, and Testing.&#xd;
&#xd;
As you can see, the system is nearly complete with items in blue deliberately &#xd;
eliminated. Work has started&#xd;
on both the drone and obstacle avoidance has started. Team A has yet to start &#xd;
work sections related to the&#xd;
gripper, user interface, and final integration.&#xd;
&#xd;
Significant  revisions  were  made  to  the  project  at  the  start  of  the  &#xd;
Spring  Semester  due  to  changes  in&#xd;
personnel and a re-evaluation of priorities. The largest change was a reduction &#xd;
in quality -- define as â&#x20ac;&#x153;the&#xd;
degree to which requirements are metâ&#x20ac;&#xfffd; -- and a minor reduction in scope. In &#xd;
order for focus better on the&#xd;
true  intent  of  the  project,  the  Graphical  User  Interface  and  VTOL  &#xd;
were  eliminated.  We  shifted  to  the&#xd;
better-supported 3DR X-8+ and to the integration of subsystems.&#xd;
&#xd;
&#xd;
8.1  Work Breakdown Structure&#xd;
&#xd;
1      Systems Design                                                           &#xd;
                                 2      Procurement and Assembly                &#xd;
                                          3      Testing &amp; Integration&#xd;
&#xd;
1.1.1      Design System Architecture                                  25 days  &#xd;
               2.1.1      Procure Drone                                         &#xd;
    2 wks                    3.1.1      Build Test Environment                  &#xd;
                                                1 week&#xd;
&#xd;
1.1.2      Design Test Environment                                       4 days &#xd;
                  2.1.2      Assemble Drone                                     &#xd;
     1 wk                      3.1.2      Full Scenario Test                    &#xd;
                                                         2 weeks&#xd;
&#xd;
1.2         Drone                                                               &#xd;
                                        2.1.3      Procure Flight Controller    &#xd;
                       2 wks                    3.2         Drone&#xd;
&#xd;
1.2.1      Choose Drone                                                         &#xd;
  1 day                    2.1.4      Modify UAV for obstacle sensors           &#xd;
  1 wk                      3.2.1      Test Flight Controller                   &#xd;
                                                   1 week&#xd;
&#xd;
1.2.2      Select Flight Controller                                           1 &#xd;
day                    2.1.5      Fabricate underbelly                          &#xd;
        1 wk                      3.2.2      Test Drone R/C-only Control        &#xd;
                                                 4 days&#xd;
&#xd;
1.2.3      Design Drone Underbelly                                       2 wks  &#xd;
                  2.3         Ground Platform                                   &#xd;
                                    3.2.3      Tune and test forward flight     &#xd;
                                                     2 wks&#xd;
&#xd;
1.2.4      Design Marker Search Algorithm                          4 weeks      &#xd;
          2.3.1      Build Ground Platform                               3 wks  &#xd;
                  3.2.4      Understand code                                    &#xd;
                                         1.5 wks&#xd;
&#xd;
1.3         Ground Platform                                                     &#xd;
                              2.4         Vision System                         &#xd;
                                                   3.2.5      Waypoint using &#xd;
hover                                                                     4 &#xd;
days&#xd;
&#xd;
1.3.1      Design Base Station                                                 &#xd;
1 week                 2.4.1      Procure Camera                                &#xd;
          2 wks                    3.2.6      Waypoint using FF                 &#xd;
                                                          1.5 wks&#xd;
&#xd;
1.4      Vision System                                                          &#xd;
                              2.4.2      Procure Vision Board                   &#xd;
               1 week                 3.2.7      Autonomously control UAV using &#xd;
predef script                         1 wk&#xd;
&#xd;
1.4.1      Design Vision System                                              1 &#xd;
day                    2.4.3      Fabricate Visual Markers                      &#xd;
     1 wk                      3.2.8      Test Visual Landing of Drone          &#xd;
                                               1 wk&#xd;
&#xd;
1.4.2      Select Camera                                                        &#xd;
  3 days                   2.5         Obstacle Avoidance                       &#xd;
                                          3.3         Vision System&#xd;
&#xd;
1.4.3      Select Vision Board                                                  &#xd;
1 day                    2.5.2      Procure Obstacle Avoidance Sensors      1 &#xd;
week                 3.3.1      Test Camera and Board                           &#xd;
                                       3 days&#xd;
&#xd;
1.4.4      Design Visual Markers                                            1 &#xd;
day                    2.5.3      Procure Optical Flow                          &#xd;
        1 week                 3.3.2      Integrate and test Visual system on &#xd;
board (Mech &amp; Elec)       4 days&#xd;
&#xd;
1.5         Obstacle Avoidance                                                  &#xd;
                            2.5.4      PCB iterations                           &#xd;
                   2 wks                    3.3.3      Test Visual Markers with &#xd;
Vision System                                      3 days&#xd;
&#xd;
1.5.1      Analyze Obstacle Avoidance Sensors                   1 wk            &#xd;
          2.6         Communications System                                     &#xd;
                   3.3.4      Integrate vision info into control                &#xd;
                                  4 days&#xd;
&#xd;
1.5.2      Design Obstacle Avoidance                                   2 months &#xd;
            2.6.1      Procure Radio Module                               2 wks &#xd;
                   3.4         Obstacle Avoidance&#xd;
&#xd;
1.5.3      Design Sensor Layout                                              1 &#xd;
wk                      2.7         User Interface                              &#xd;
                                              3.4.1      Integrate Optical Flow &#xd;
                                                                   2 wks&#xd;
&#xd;
&#xd;
1.6      Communications System&#xd;
&#xd;
1.6.1      Design Communications Systems                         3 days&#xd;
&#xd;
1.6.2      Select Radio Module                                               1 &#xd;
day&#xd;
&#xd;
1.7         User Interface&#xd;
&#xd;
1.7.1      Determine User Inputs/Outputs                           4 days&#xd;
&#xd;
1.7.2      Design User Interface                                             2 &#xd;
weeks&#xd;
&#xd;
1.8         Package Handling&#xd;
&#xd;
1.8.1      Design Gripper System                                           3 &#xd;
weeks&#xd;
&#xd;
1.8.2      Select Gripper Mechanism                                    1 wk&#xd;
&#xd;
1.8.3      Design Package Modifications                              1 wk&#xd;
&#xd;
2.7.1      Build User Interface                                    1 week&#xd;
&#xd;
2.8      Package Handling&#xd;
&#xd;
2.8.1      Build/Procure Gripper                                2 months&#xd;
&#xd;
3.4.2      Integrate and test obstacle avoidance system with drone      1.5 wks&#xd;
&#xd;
3.4.3      Table Test Obstacle Avoidance Sensors                                &#xd;
      3 wks&#xd;
&#xd;
3.4.4      Test Waypoint Following with Obstacle Avoidance                  1 &#xd;
month&#xd;
&#xd;
3.4.5      Test Visual Landing with Obstacle Avoidance                          &#xd;
  2 months&#xd;
&#xd;
3.4.6      Integrate Lidar lite with pixhawk                                    &#xd;
              4 days&#xd;
&#xd;
3.5         Communications System&#xd;
&#xd;
3.5.1      Electronic Test of Radio Module                                      &#xd;
             1 day&#xd;
&#xd;
3.5.3      Data Test of Radio Module                                            &#xd;
                2 days&#xd;
&#xd;
3.6         User Interface&#xd;
&#xd;
3.6.1      Test User Interface                                                  &#xd;
                        3 days&#xd;
&#xd;
3.7         Package Handling&#xd;
&#xd;
3.7.1      Test Gripper Electronics                                             &#xd;
                    4 days&#xd;
&#xd;
Completed                                                                       &#xd;
                                                                                &#xd;
                                             3.7.2      Test Gripper and &#xd;
Package Modifications                                     1 week&#xd;
&#xd;
Out of scope                                                                    &#xd;
                                                                                &#xd;
                                             3.7.3      Integrate and test &#xd;
gripper with drone                                         1 week&#xd;
&#xd;
24&#xd;
&#xd;
&#xd;
8.2  Schedule&#xd;
&#xd;
The following schedule was made using a Gantt chart and our best estimates of &#xd;
both development time&#xd;
and system dependencies.&#xd;
&#xd;
Table 10: Project Schedule of Deliverables&#xd;
&#xd;
This schedule was a refinement on the original, developed during the fall &#xd;
semester.  Team A held&#xd;
themselves to this strict timeline until week #10. The team wasnâ&#x20ac;&#x2122;t able to &#xd;
complete Obstacle Avoidance&#xd;
due         to delays from weather and numerous crashes. Thanks to appropriate &#xd;
risk management, the team was&#xd;
able to repair the drone and recover the timeline the following week.&#xd;
&#xd;
8.3  Risk Management&#xd;
&#xd;
The Team identified 3 risks to the project:&#xd;
&#xd;
1.    The Drone may not Locate the Marker&#xd;
&#xd;
2.    Lack of Testing Opportunities due to Weather&#xd;
&#xd;
3.    Possible trouble Integrating the Navigation Stack with the Pixhawk&#xd;
&#xd;
&#xd;
8.3.1 Marker Search Algorithm not Robust&#xd;
&#xd;
Figure 18: Risk Matrix for Risk 1&#xd;
&#xd;
This technical risk is a real-world consideration. Itâ&#x20ac;&#x2122;s important that the &#xd;
possibility that the drone is unable&#xd;
to find the marker in vicinity of the house be considered.  The consequence is &#xd;
that the drone will be&#xd;
unable to deliver the package.&#xd;
&#xd;
This risk was mitigated by having the drone return to a known-good position &#xd;
following completion of the&#xd;
search pattern. Additionally, we experimented with different search parameters &#xd;
to ensure that the marker&#xd;
was discovered. One parameter that we didnâ&#x20ac;&#x2122;t anticipate, but eventually tuned &#xd;
was the exposure setting on&#xd;
the camera. Light and shadows in different areas and at different times of day &#xd;
behaved differently.&#xd;
&#xd;
This risk was successfully minimized using the above techniques.&#xd;
&#xd;
8.3.2 Weather Limiting Testing Opportunities&#xd;
&#xd;
FIgure 19: Risk Matrix for Risk 2&#xd;
&#xd;
Due to the decision to operate outdoors, this operational risk was realized &#xd;
several times during the project.&#xd;
The largest impact was delayed testing and integration since the system had to &#xd;
be tested were there was a&#xd;
GPS signal. We mitigated this by testing early and often. Additionally, we &#xd;
payed close attention to&#xd;
weather reports in order to anticipate windows for testing.&#xd;
&#xd;
An unexpected benefit or dealing with weather also forced the team to develop &#xd;
robust algorithms. This&#xd;
benefit was shown during the SVE and SVE encore when wind gusts of up to 15 MPH &#xd;
almost pushed the&#xd;
drone off the marker. The marker tracking algorithm correctly compensated for &#xd;
the wind, allowing the&#xd;
package to be successfully delivered.&#xd;
&#xd;
&#xd;
8.3.3 Integration of Navigation Stack with Pixhawk&#xd;
&#xd;
FIgure 20: Risk Matrix for Risk 3&#xd;
&#xd;
The final, significant risk to the project that the team anticipated involved &#xd;
integrating the ROS Navigation&#xd;
Stack with the Pixhawk. Our concern was that this process would take too long &#xd;
and delay integration of&#xd;
additional subsystems. To combat this, the team prioritized its integration &#xd;
early in the schedule. Back up&#xd;
to       this, was proper mission planning to eliminate the need for obstacle &#xd;
detection. However, thanks to its&#xd;
prioritizing integration and frequent testing, the backup wasnâ&#x20ac;&#x2122;t needed.&#xd;
&#xd;
8.4  Budget&#xd;
&#xd;
Table 11: Project Budget&#xd;
&#xd;
Even after switching to a new platform, our expenditure was below the maximum &#xd;
budget allotted ($&#xd;
4000).&#xd;
&#xd;
&#xd;
9.  Conclusion&#xd;
&#xd;
Numerous changes were made during the Spring Semester. Through it all, Team A &#xd;
was able to deliver on&#xd;
the original intent of the project. The majority of the progress of the project &#xd;
was completed during this&#xd;
last semester. Along the way, we learned several key lessons and developed &#xd;
ideas for further development&#xd;
of the platform.&#xd;
&#xd;
9.1 Lessons Learned&#xd;
&#xd;
Several key lessons were identified during the projectâ&#x20ac;&#x2122;s life cycle. They &#xd;
include simplifying the platform&#xd;
and components early, important considerations for outdoor drone projects, the &#xd;
importance of spares, and&#xd;
how to reduce scope while maintaining a projectâ&#x20ac;&#x2122;s intent.&#xd;
&#xd;
9.1.1 Simplify&#xd;
&#xd;
The need for simplification was seen repeatedly. In fact, reevaluation of a &#xd;
project is continuous. Over the&#xd;
last two semester, the team was forced to decide between different tradeoffs. &#xd;
Through these decisions, a&#xd;
trend  emerged  in  going  with  more  proven  or  more  reliable  &#xd;
subcomponents.  The  lesson  is  not  that&#xd;
complicated  components  should  be  avoided.  Rather,  we  realized  that  &#xd;
integration  was  itself  a  difficult&#xd;
challenge and fighting unwieldy subsystems only multiplied this difficulty.&#xd;
&#xd;
We realized that the FireFly6 is the weakest subsystem of our project at this &#xd;
point in time. The UAV is&#xd;
also the most important subsystem of our project and must be made operational &#xd;
as soon as possible. Due&#xd;
to this realization, we are contemplating as part of our risk mitigation to &#xd;
change platforms entirely and go&#xd;
with an octocopter capable of doing everything the FireFly6 does just at slower &#xd;
speeds and with less flight&#xd;
time. Cutting our losses and modifying our project was the best thing for our &#xd;
project long-term.&#xd;
&#xd;
On  the  Obstacle  Avoidance  end,  using  14  ultrasonic  sensors  proved  to  &#xd;
be  imprecise  and  noise-prone.&#xd;
These were scrapped in place of a Hokuyo Lidar due to its superior accuracy and &#xd;
ease of integration. The&#xd;
numerous sensors, while within the tolerances of our system requirements, were &#xd;
heavy and easily fooled.&#xd;
By eliminating them, we were able to better focus on navigation and obstacle &#xd;
avoidance.&#xd;
&#xd;
These are just two examples of when the choice to simply, without cutting &#xd;
corners, allowed for greater&#xd;
progress of the system as a whole. Future teams are strongly encouraged to get &#xd;
systems streamlined from&#xd;
the start since integration itself is complex. Finally, by focusing on &#xd;
integration, teams will have a greater&#xd;
time to evolve their systems as they learn the  technical details they couldnâ&#x20ac;&#x2122;t &#xd;
have anticipated from the&#xd;
start.&#xd;
&#xd;
9.1.2 Outdoor Drone Considerations&#xd;
&#xd;
Team A made the choice to operate outdoors. We stand by this decision as it was &#xd;
rewarding to operate in&#xd;
a real-world environment. However, it came at a significant risks and &#xd;
opportunity costs which werenâ&#x20ac;&#x2122;t&#xd;
evident at the start.&#xd;
&#xd;
The first challenge to the team was the current regulatory environment in the &#xd;
United States. In fact, FAA&#xd;
and local regulations changed midway through our project. The team was able to &#xd;
adapt to a degree, but&#xd;
this should be weighed by future teams before electing to operate drones &#xd;
outdoors.&#xd;
&#xd;
&#xd;
Team A interacted with the Universityâ&#x20ac;&#x2122;s Office of Risk Management and Insurance &#xd;
in addition to Legal&#xd;
Counsels. We were offered assistance to submit for a Section 333 Waiver with &#xd;
the FAA issuing a joint&#xd;
â&#x20ac;&#x153;blanketâ&#x20ac;&#xfffd;  Certificate  of  Waiver  of  Authorization  (COA)  for  operating  &#xd;
under  400  feet.  Details  can  be&#xd;
found on the FAAâ&#x20ac;&#x2122;s website about how to file a petition.&#xd;
&#xd;
However,  the  expected  turnaround  time  is  120  days  normally,  but  that  &#xd;
has  been  lengthened  due  to&#xd;
excessive applications caused by the FAAâ&#x20ac;&#x2122;s new rulings. With less than 20 days &#xd;
till SVE, It is unlikely&#xd;
that   we   would   receive   authorization.   Rather   than   waste   &#xd;
resources,   Team   A   has   made   alternate&#xd;
arrangements  and  will  be  documenting  the  appropriate  process  for  next  &#xd;
yearâ&#x20ac;&#x2122;s  class.  The  notes  below&#xd;
come directly from Daniel Munsh:&#xd;
&#xd;
As  of  April  2016,  there  are  four  general  government  requirements for  &#xd;
non-recreational  (called â&#x20ac;&#x153;civilâ&#x20ac;&#xfffd;)&#xd;
outdoor drone operation:&#xd;
&#xd;
1.    The aircraft must be registered with the FAA;&#xd;
&#xd;
2.    The aircraft must have a Section 333 Exemption from the FAA (this exempts &#xd;
the drone from the&#xd;
FAA regulations for traditional aircraft that would otherwise apply);&#xd;
&#xd;
3.    The aircraft must have a COA from the FAA (this authorizes the specific &#xd;
parameters for flight&#xd;
operations).   Section 333 Exemptions automatically come with a â&#x20ac;&#x153;blanketâ&#x20ac;&#xfffd; COA &#xd;
for operations&#xd;
under 400 feet.&#xd;
&#xd;
4.    Comply  with  any  state  or  local  laws  regulating  drones.   For  &#xd;
example,  the  City  of  Pittsburgh&#xd;
prohibits drone operations in public parks.  So even if you have all the &#xd;
proceeding items from the&#xd;
FAA, teams still canâ&#x20ac;&#x2122;t operate in city parks in Pittsburgh.&#xd;
&#xd;
Important points of contact for next yearâ&#x20ac;&#x2122;s class include Daniel J. Munsch, AVP &#xd;
and Assistant General&#xd;
Counsel  (dmunsch@andrew.cmu.edu)  and  Diane  Patterson,  Senior  Risk  &#xd;
Management  and  Insurance&#xd;
Specialist (dianep@andrew.cmu.edu).&#xd;
&#xd;
The current legal landscape is expected to change sometime in calendar year &#xd;
2016. Future classes should&#xd;
reference CMUâ&#x20ac;&#x2122;s Office of the General Counselâ&#x20ac;&#x2122;s Page on Drones. Separately, the &#xd;
Senate is considering a&#xd;
proposed  law,  the  Higher  Education  UAS  Modernization  Act,  that  would  &#xd;
create  a  separate  regulatory&#xd;
structure for drone operations related to research at institutions of higher &#xd;
education.  Finally, teams should&#xd;
also be aware that there is a blanket prohibition of drones in the cityâ&#x20ac;&#x2122;s &#xd;
parks, which eliminates nearby&#xd;
Schenley Park as a test area.&#xd;
&#xd;
The  next  challenge  to  operating outdoors  is  in  mitigating the  effects  &#xd;
of  the  environment.  Team A  lost&#xd;
significant testing time due to weather and use of green spaces around campus.&#xd;
&#xd;
First, weather  is unpredictable and has the greatest impact on testing time. &#xd;
This was less of a concern&#xd;
early in the process when individual subsystems are being developed and tested. &#xd;
The effect worst during&#xd;
the spring semester with the cold and heavy snow early in the semester followed &#xd;
by wind and rain in the&#xd;
later  months. These limit testing of the system at  exactly the time that it &#xd;
is needed most. As our team&#xd;
demonstrated, these obstacles are able to overcome, but require preparation and &#xd;
tenacity. Teams will need&#xd;
to     monitor weather forecasts and plan their schedules accordingly.&#xd;
&#xd;
Additionally, events are often hosted on the â&#x20ac;&#x153;Mallâ&#x20ac;&#xfffd; and â&#x20ac;&#x153;Cutâ&#x20ac;&#xfffd; on campus. Teams &#xd;
will need to check that&#xd;
areas are clear of crowds and that passers-by be redirected around the testing &#xd;
area for their own public&#xd;
safety.  Caution  tape  and  stakes  were  sufficient  for  the  latter  &#xd;
purpose,  but  this  is  an  additional  time&#xd;
constraint.  Furthermore,  if  teams  are  able  to  register  time  on  the  &#xd;
stadium,  then  they  have  a  controlled&#xd;
&#xd;
&#xd;
environment to work in. The point of contact for the stadium is Sara Gauntner &#xd;
(sarap@andrew.cmu.edu).&#xd;
This isnâ&#x20ac;&#x2122;t the only time constraint, which is our final consideration.&#xd;
&#xd;
Teams seeking to operate outdoors, drones or not, need to be aware that travel &#xd;
and setup time come with&#xd;
significant opportunity costs. The time and effort in transporting robots and &#xd;
supporting materials back-&#xd;
and-forth  should  not  be  overlooked.  Teams  are  encouraged  to  develop  a &#xd;
 field  kit  and  keep  it  staged.&#xd;
Discipline  is  required  in  ensuring  that  any  item  removed  from  the  &#xd;
kit  is  returned  in  order  to  prevent&#xd;
wasted time travelling back to the lab. The ease of transport for these kits is &#xd;
another factor. Weight should&#xd;
be minimized while still allowing for possible contingencies. Potential items &#xd;
for kits include spare parts,&#xd;
extra batteries, extension cords, tools, crowd-control materials, and the test &#xd;
environment itself. These will&#xd;
grow as the project develops.&#xd;
&#xd;
The time taken is a substantial opportunity cost. For our team, it was &#xd;
rewarding to operate in real-world&#xd;
conditions and not be confined to a netted cube in the basement. We do wish to &#xd;
arm future teams with the&#xd;
knowledge of the trade-offs involved in operating drones outdoors.&#xd;
&#xd;
9.2 Future Work&#xd;
&#xd;
Our team began our project with a specific vision for its application. We see &#xd;
the project as commercially&#xd;
viable  if  specific  supporting  infrastructure  could  be  implemented.  Our  &#xd;
project  is  predicated  on  the&#xd;
integration with delivery trucks. For this to work, both a physical interface &#xd;
between the drone and truck,&#xd;
and        a user interface for drivers.&#xd;
&#xd;
The  physical  interface  between  the  drone  and  truck  itself  would  &#xd;
warrant  another  MRSD  project.  The&#xd;
loading of packages, charging (or replacement) of batteries, and communication &#xd;
link between truck and&#xd;
drone are a worthy challenge. We would need to leverage the system of staging &#xd;
packages used by delivery&#xd;
companies. There is a specific order in loading trucks that could be leveraged &#xd;
to simplify this problem.&#xd;
Packages are currently loaded from front-to-back and top-to-bottom in order of &#xd;
delivery. However, what&#xd;
the physical system of landing, loading, and launching drones would like like &#xd;
is unknown at this time.&#xd;
This is the next major challenge for our application.&#xd;
&#xd;
Additionally, since we eliminated the GUI from our project, this needs to be &#xd;
built in order to ensure the&#xd;
utility of the project. Currently, the drone needs to be reinitialized during &#xd;
each battery change since we&#xd;
elected  to  not  use  predefined  coordinates  and  donâ&#x20ac;&#x2122;t  have  a  system  of &#xd;
 passing  that  information  to  the&#xd;
drone.&#xd;
&#xd;
A GUI is technically simple, but the user experience should be paramount to &#xd;
ensure its adoption and use&#xd;
commercially. Ease of adoption by delivery truck drivers would expedite its &#xd;
adoption commercially by&#xd;
the large organizations we targeted.&#xd;
&#xd;
During the 2015-2016 school year, we successfully implemented the core &#xd;
technology required to deliver&#xd;
packages  by UAV. The team  may release this  as  an open-source project in  &#xd;
order  to jump-start  similar&#xd;
projects.  We  still  believe  strongly  in  our  original  application,  of  &#xd;
leveraging  existing  package-delivery&#xd;
networks, and believe that with additional development (and regulatory &#xd;
permission) that  this goal could&#xd;
be achieved.&#xd;
&#xd;
&#xd;
10. References&#xd;
&#xd;
[1] Meier, L.; Tanskanen, P.; Fraundorfer, F.; Pollefeys, M., "PIXHAWK: A &#xd;
system for autonomous&#xd;
flight using onboard computer vision," in Robotics and Automation (ICRA), 2011 &#xd;
IEEE International&#xd;
Conference on , vol., no., pp.2992-2997, 9-13 May 2011&#xd;
&#xd;
[2] Web link: â&#x20ac;&#x153;Electro Permanent Magnetâ&#x20ac;&#xfffd; from Nica Drone,&#xd;
http://nicadrone.com/index.php?id_product=59&amp;controller=product, accessed &#xd;
10/2/15&#xd;
&#xd;
[3] Web link: â&#x20ac;&#x153;Odroidâ&#x20ac;&#xfffd; from HardKernel&#xd;
http://www.hardkernel.com/main/products/prdt_info.php?g_code=G143452239825&#xd;
&#xd;
[4] Web link: Hokuyo UTM-30LX &#xd;
https://www.hokuyo-aut.jp/02sensor/07scanner/utm_30lx.html&#xd;
&#xd;
[5] Edwin Olson, â&#x20ac;&#x153;AprilTag: A robust and flexible visual fiducial systemâ&#x20ac;&#xfffd; in &#xd;
Proceedings of the IEEE&#xd;
International Conference on Robotics and Automation (ICRA), 2011&#xd;
&#xd;
[6] Web link: â&#x20ac;&#x153;MAVROS - Ros node for MAVlink communicationsâ&#x20ac;&#xfffd; &#xd;
http://wiki.ros.org/mavros&#xd;
&#xd;
[7] Web link: AprilTags developed at university of Michigan&#xd;
https://april.eecs.umich.edu/wiki/index.php/AprilTags&#xd;
&#xd;
[8] Web link: AprilTags C++ library from MIT, &#xd;
http://people.csail.mit.edu/kaess/apriltags/&#xd;
&#xd;
[9] Web link: â&#x20ac;&#x153;Precision Land ArduCopter Demoâ&#x20ac;&#xfffd;, &#xd;
http://diydrones.com/profiles/blogs/precision-land-&#xd;
arducopter-demo?xg_source=activity, accessed 10/2/2015&#xd;
&#xd;
[10] Web link: â&#x20ac;&#x153;3D Robotics Partners with Intel, Develops New Drone Powerâ&#x20ac;&#xfffd;,&#xd;
http://3drobotics.com/3d-robotics-partners-intel-develops-new-drone-power/, &#xd;
accessed 10/2/15&#xd;
&#xd;
[11] Web link: â&#x20ac;&#x153;Petitioning for Exemption under Section 333â&#x20ac;&#xfffd;,&#xd;
https://www.faa.gov/uas/legislative_programs/section_333/how_to_file_a_petition/&#xd;
, accessed&#xd;
5/5/2016&#xd;
&#xd;
[12] Web link: â&#x20ac;&#x153;CMUâ&#x20ac;&#x2122;s Office of the General Counselâ&#x20ac;&#x2122;s Page on Dronesâ&#x20ac;&#xfffd;,&#xd;
https://www.cmu.edu/ogc/drones/, accessed 5/5/2016&#xd;
&#xd;
[13] Web link: â&#x20ac;&#x153;Sen. Moran Introduces Legislation to Support Educational Use of &#xd;
Unmanned Aircraft&#xd;
Systemsâ&#x20ac;&#xfffd;, http://www.moran.senate.gov/public/index.cfm/news-&#xd;
releases?ContentRecord_id=608B2DA3-7434-4C04-B69F-D38DD32FFA5C, accessed &#xd;
5/5/2016&#xd;
&#xd;
[14] Web link: â&#x20ac;&#x153;DWA Local Planner ROSâ&#x20ac;&#xfffd; http://wiki.ros.org/dwa_local_planner&#xd;
&#xd;
</TextWithNodes>
<!-- The default annotation set -->

<AnnotationSet>
<Annotation Id="493" Type="component" StartNode="671" EndNode="698">
</Annotation>
<Annotation Id="494" Type="component" StartNode="851" EndNode="855">
</Annotation>
<Annotation Id="495" Type="component" StartNode="928" EndNode="931">
</Annotation>
<Annotation Id="496" Type="component_state" StartNode="947" EndNode="956">
</Annotation>
<Annotation Id="497" Type="component_state" StartNode="986" EndNode="993">
</Annotation>
<Annotation Id="498" Type="component_state" StartNode="1015" EndNode="1020">
</Annotation>
<Annotation Id="499" Type="component_state" StartNode="1082" EndNode="1087">
</Annotation>
<Annotation Id="500" Type="component_state" StartNode="1089" EndNode="1098">
</Annotation>
<Annotation Id="501" Type="component_state" StartNode="1118" EndNode="1127">
</Annotation>
<Annotation Id="502" Type="component_state" StartNode="1137" EndNode="1141">
</Annotation>
<Annotation Id="503" Type="environment_entity" StartNode="1061" EndNode="1080">
</Annotation>
<Annotation Id="509" Type="component_state" StartNode="2090" EndNode="2100">
</Annotation>
<Annotation Id="510" Type="component_state" StartNode="2521" EndNode="2528">
</Annotation>
<Annotation Id="511" Type="component_state" StartNode="2728" EndNode="2733">
</Annotation>
<Annotation Id="512" Type="component_state" StartNode="2783" EndNode="2791">
</Annotation>
<Annotation Id="513" Type="environment_entity" StartNode="2808" EndNode="2821">
</Annotation>
<Annotation Id="514" Type="component_state" StartNode="2851" EndNode="2856">
</Annotation>
<Annotation Id="515" Type="environment_entity" StartNode="2861" EndNode="2867">
</Annotation>
<Annotation Id="516" Type="component_state" StartNode="2872" EndNode="2880">
</Annotation>
<Annotation Id="517" Type="component_state" StartNode="2889" EndNode="2896">
</Annotation>
<Annotation Id="518" Type="component_state" StartNode="2913" EndNode="2919">
</Annotation>
<Annotation Id="519" Type="environment_entity" StartNode="2920" EndNode="2926">
</Annotation>
<Annotation Id="520" Type="environment_entity" StartNode="2951" EndNode="2961">
</Annotation>
<Annotation Id="521" Type="environment_entity" StartNode="2991" EndNode="2999">
</Annotation>
<Annotation Id="522" Type="environment_entity" StartNode="3006" EndNode="3012">
</Annotation>
<Annotation Id="523" Type="component_state" StartNode="3048" EndNode="3054">
</Annotation>
<Annotation Id="524" Type="environment_entity" StartNode="3059" EndNode="3068">
</Annotation>
<Annotation Id="526" Type="component_state" StartNode="3152" EndNode="3160">
</Annotation>
<Annotation Id="527" Type="component_state" StartNode="3180" EndNode="3188">
</Annotation>
<Annotation Id="528" Type="component" StartNode="3238" EndNode="3255">
</Annotation>
<Annotation Id="529" Type="component_state" StartNode="3261" EndNode="3268">
</Annotation>
<Annotation Id="530" Type="component" StartNode="4134" EndNode="4150">
</Annotation>
<Annotation Id="531" Type="component_state" StartNode="4177" EndNode="4185">
</Annotation>
<Annotation Id="532" Type="component_state" StartNode="4525" EndNode="4532">
</Annotation>
<Annotation Id="533" Type="component" StartNode="4539" EndNode="4546">
</Annotation>
<Annotation Id="534" Type="component" StartNode="4631" EndNode="4638">
</Annotation>
<Annotation Id="535" Type="component" StartNode="4645" EndNode="4652">
</Annotation>
<Annotation Id="536" Type="component" StartNode="5485" EndNode="5489">
</Annotation>
<Annotation Id="537" Type="component" StartNode="5494" EndNode="5499">
</Annotation>
<Annotation Id="538" Type="environment_entity" StartNode="5500" EndNode="5508">
</Annotation>
<Annotation Id="539" Type="component_state" StartNode="5519" EndNode="5540">
</Annotation>
<Annotation Id="540" Type="environment_entity" StartNode="5548" EndNode="5572">
</Annotation>
<Annotation Id="541" Type="component_state" StartNode="5583" EndNode="5591">
</Annotation>
<Annotation Id="542" Type="component_state" StartNode="5641" EndNode="5647">
</Annotation>
<Annotation Id="543" Type="component_state" StartNode="5652" EndNode="5660">
</Annotation>
<Annotation Id="544" Type="environment_entity" StartNode="5668" EndNode="5678">
</Annotation>
<Annotation Id="545" Type="component_state" StartNode="5702" EndNode="5706">
</Annotation>
<Annotation Id="546" Type="environment_entity" StartNode="5710" EndNode="5736">
</Annotation>
<Annotation Id="547" Type="component_state" StartNode="5747" EndNode="5751">
</Annotation>
<Annotation Id="548" Type="environment_entity" StartNode="5752" EndNode="5759">
</Annotation>
<Annotation Id="549" Type="environment_entity_property" StartNode="5760" EndNode="5794">
</Annotation>
<Annotation Id="550" Type="component_state" StartNode="5805" EndNode="5813">
</Annotation>
<Annotation Id="551" Type="component_state" StartNode="5815" EndNode="5823">
</Annotation>
<Annotation Id="552" Type="component_state" StartNode="5831" EndNode="5835">
</Annotation>
<Annotation Id="553" Type="environment_entity" StartNode="5847" EndNode="5871">
</Annotation>
<Annotation Id="554" Type="environment_entity_property" StartNode="5998" EndNode="6010">
</Annotation>
<Annotation Id="555" Type="component_state" StartNode="6129" EndNode="6135">
</Annotation>
<Annotation Id="556" Type="environment_entity" StartNode="6136" EndNode="6152">
</Annotation>
<Annotation Id="557" Type="component" StartNode="6226" EndNode="6229">
</Annotation>
<Annotation Id="558" Type="component_property" StartNode="6240" EndNode="6244">
</Annotation>
<Annotation Id="559" Type="environment_entity" StartNode="6302" EndNode="6309">
</Annotation>
<Annotation Id="560" Type="environment_entity_property" StartNode="6317" EndNode="6335">
</Annotation>
<Annotation Id="561" Type="environment_entity_property" StartNode="6359" EndNode="6369">
</Annotation>
<Annotation Id="562" Type="component_state" StartNode="6456" EndNode="6463">
</Annotation>
<Annotation Id="563" Type="environment_entity" StartNode="6464" EndNode="6472">
</Annotation>
<Annotation Id="564" Type="component_state" StartNode="6483" EndNode="6493">
</Annotation>
<Annotation Id="565" Type="component" StartNode="6508" EndNode="6512">
</Annotation>
<Annotation Id="566" Type="component" StartNode="6517" EndNode="6532">
</Annotation>
<Annotation Id="567" Type="component_state" StartNode="6611" EndNode="6622">
</Annotation>
<Annotation Id="568" Type="component" StartNode="6588" EndNode="6591">
</Annotation>
<Annotation Id="569" Type="component" StartNode="6596" EndNode="6610">
</Annotation>
<Annotation Id="570" Type="component" StartNode="6543" EndNode="6557">
</Annotation>
<Annotation Id="571" Type="component_state" StartNode="6558" EndNode="6577">
</Annotation>
<Annotation Id="572" Type="component" StartNode="6646" EndNode="6649">
</Annotation>
<Annotation Id="573" Type="component_state" StartNode="6650" EndNode="6658">
</Annotation>
<Annotation Id="574" Type="component_state" StartNode="6692" EndNode="6700">
</Annotation>
<Annotation Id="575" Type="environment_entity" StartNode="6714" EndNode="6725">
</Annotation>
<Annotation Id="576" Type="environment_entity" StartNode="6705" EndNode="6712">
</Annotation>
<Annotation Id="577" Type="component_state" StartNode="6737" EndNode="6741">
</Annotation>
<Annotation Id="578" Type="environment_entity" StartNode="6742" EndNode="6749">
</Annotation>
<Annotation Id="579" Type="environment_entity_property" StartNode="6750" EndNode="6759">
</Annotation>
<Annotation Id="580" Type="environment_entity" StartNode="6767" EndNode="6784">
</Annotation>
<Annotation Id="581" Type="component_state" StartNode="6795" EndNode="6800">
</Annotation>
<Annotation Id="582" Type="environment_entity" StartNode="6801" EndNode="6812">
</Annotation>
<Annotation Id="583" Type="component_state" StartNode="6846" EndNode="6858">
</Annotation>
<Annotation Id="584" Type="component" StartNode="6864" EndNode="6872">
</Annotation>
<Annotation Id="585" Type="component_state" StartNode="6876" EndNode="6883">
</Annotation>
<Annotation Id="586" Type="environment_entity" StartNode="6884" EndNode="6895">
</Annotation>
<Annotation Id="587" Type="component_state" StartNode="6997" EndNode="7003">
</Annotation>
<Annotation Id="588" Type="environment_entity" StartNode="7004" EndNode="7022">
</Annotation>
<Annotation Id="589" Type="environment_entity" StartNode="6972" EndNode="6977">
</Annotation>
<Annotation Id="590" Type="environment_entity" StartNode="6982" EndNode="6986">
</Annotation>
<Annotation Id="591" Type="component_property" StartNode="7040" EndNode="7060">
</Annotation>
<Annotation Id="592" Type="component" StartNode="7084" EndNode="7088">
</Annotation>
<Annotation Id="593" Type="environment_entity" StartNode="7228" EndNode="7237">
</Annotation>
<Annotation Id="594" Type="environment_entity_property" StartNode="7262" EndNode="7273">
</Annotation>
<Annotation Id="595" Type="environment_entity_state" StartNode="7278" EndNode="7286">
</Annotation>
<Annotation Id="596" Type="environment_entity_state" StartNode="7302" EndNode="7309">
</Annotation>
<Annotation Id="597" Type="component_property" StartNode="7337" EndNode="7351">
</Annotation>
<Annotation Id="598" Type="component_state" StartNode="7425" EndNode="7433">
</Annotation>
<Annotation Id="599" Type="component_state" StartNode="7480" EndNode="7486">
</Annotation>
<Annotation Id="600" Type="environment_entity" StartNode="7492" EndNode="7505">
</Annotation>
<Annotation Id="601" Type="component" StartNode="7565" EndNode="7568">
</Annotation>
<Annotation Id="602" Type="component_state" StartNode="7569" EndNode="7575">
</Annotation>
<Annotation Id="603" Type="component_state" StartNode="7580" EndNode="7587">
</Annotation>
<Annotation Id="604" Type="environment_entity_property" StartNode="7595" EndNode="7597">
</Annotation>
<Annotation Id="605" Type="component" StartNode="7631" EndNode="7634">
</Annotation>
<Annotation Id="606" Type="component_state" StartNode="7635" EndNode="7640">
</Annotation>
<Annotation Id="607" Type="component_property" StartNode="7654" EndNode="7661">
</Annotation>
<Annotation Id="608" Type="component" StartNode="7680" EndNode="7689">
</Annotation>
<Annotation Id="609" Type="component" StartNode="7698" EndNode="7701">
</Annotation>
<Annotation Id="610" Type="component_state" StartNode="7702" EndNode="7709">
</Annotation>
<Annotation Id="611" Type="environment_entity" StartNode="7710" EndNode="7718">
</Annotation>
<Annotation Id="612" Type="environment_entity_property" StartNode="7737" EndNode="7741">
</Annotation>
<Annotation Id="613" Type="component" StartNode="7750" EndNode="7753">
</Annotation>
<Annotation Id="614" Type="component_state" StartNode="7754" EndNode="7761">
</Annotation>
<Annotation Id="615" Type="environment_entity" StartNode="7762" EndNode="7770">
</Annotation>
<Annotation Id="616" Type="environment_entity_property" StartNode="7793" EndNode="7817">
</Annotation>
<Annotation Id="617" Type="environment_entity" StartNode="7830" EndNode="7844">
</Annotation>
<Annotation Id="618" Type="environment_entity_state" StartNode="7845" EndNode="7851">
</Annotation>
<Annotation Id="619" Type="environment_entity" StartNode="7870" EndNode="7884">
</Annotation>
<Annotation Id="620" Type="environment_entity_property" StartNode="7913" EndNode="7916">
</Annotation>
<Annotation Id="621" Type="component_property" StartNode="7954" EndNode="7956">
</Annotation>
<Annotation Id="622" Type="environment_entity" StartNode="7982" EndNode="7995">
</Annotation>
<Annotation Id="623" Type="environment_entity" StartNode="8003" EndNode="8012">
</Annotation>
<Annotation Id="624" Type="environment_entity_state" StartNode="8061" EndNode="8069">
</Annotation>
<Annotation Id="625" Type="environment_entity_state" StartNode="8085" EndNode="8092">
</Annotation>
<Annotation Id="626" Type="environment_entity_property" StartNode="8152" EndNode="8156">
</Annotation>
<Annotation Id="627" Type="environment_entity" StartNode="8164" EndNode="8170">
</Annotation>
<Annotation Id="628" Type="environment_entity_property" StartNode="8203" EndNode="8207">
</Annotation>
<Annotation Id="629" Type="environment_entity_property" StartNode="8218" EndNode="8223">
</Annotation>
<Annotation Id="631" Type="environment_entity" StartNode="8253" EndNode="8259">
</Annotation>
<Annotation Id="632" Type="environment_entity_property" StartNode="8302" EndNode="8305">
</Annotation>
<Annotation Id="633" Type="environment_entity" StartNode="8379" EndNode="8388">
</Annotation>
<Annotation Id="634" Type="environment_entity_state" StartNode="8397" EndNode="8405">
</Annotation>
<Annotation Id="635" Type="environment_entity_property" StartNode="8413" EndNode="8418">
</Annotation>
<Annotation Id="636" Type="environment_entity_property" StartNode="8422" EndNode="8437">
</Annotation>
<Annotation Id="637" Type="component" StartNode="8447" EndNode="8450">
</Annotation>
<Annotation Id="638" Type="environment_entity" StartNode="8461" EndNode="8470">
</Annotation>
<Annotation Id="639" Type="environment_entity" StartNode="8550" EndNode="8559">
</Annotation>
<Annotation Id="640" Type="component_property" StartNode="8535" EndNode="8543">
</Annotation>
<Annotation Id="641" Type="component_property" StartNode="8602" EndNode="8606">
</Annotation>
<Annotation Id="642" Type="environment_entity" StartNode="8618" EndNode="8635">
</Annotation>
<Annotation Id="643" Type="environment_entity_state" StartNode="8680" EndNode="8688">
</Annotation>
<Annotation Id="644" Type="component" StartNode="8721" EndNode="8724">
</Annotation>
<Annotation Id="645" Type="component_state" StartNode="8730" EndNode="8735">
</Annotation>
<Annotation Id="646" Type="component_property" StartNode="8777" EndNode="8779">
</Annotation>
<Annotation Id="647" Type="component" StartNode="8790" EndNode="8793">
</Annotation>
<Annotation Id="648" Type="component_state" StartNode="8812" EndNode="8815">
</Annotation>
<Annotation Id="649" Type="component_property" StartNode="8816" EndNode="8826">
</Annotation>
<Annotation Id="650" Type="component" StartNode="8849" EndNode="8858">
</Annotation>
<Annotation Id="651" Type="component_state" StartNode="8835" EndNode="8844">
</Annotation>
<Annotation Id="652" Type="component" StartNode="9285" EndNode="9288">
</Annotation>
<Annotation Id="653" Type="component" StartNode="939" EndNode="946">
</Annotation>
<Annotation Id="654" Type="system_transition_condition" StartNode="927" EndNode="956">
</Annotation>
<Annotation Id="655" Type="system_transition_condition" StartNode="972" EndNode="994">
</Annotation>
<Annotation Id="656" Type="system_transition_condition" StartNode="1014" EndNode="1045">
</Annotation>
<Annotation Id="657" Type="system_transition_condition" StartNode="1081" EndNode="1087">
</Annotation>
<Annotation Id="658" Type="system_transition_condition" StartNode="1089" EndNode="1111">
</Annotation>
<Annotation Id="659" Type="system_transition_condition" StartNode="1117" EndNode="1128">
</Annotation>
<Annotation Id="660" Type="system_transition_condition" StartNode="1137" EndNode="1172">
</Annotation>
<Annotation Id="661" Type="system_transition_condition" StartNode="2078" EndNode="2100">
</Annotation>
<Annotation Id="662" Type="component" StartNode="2533" EndNode="2540">
</Annotation>
<Annotation Id="663" Type="system_transition_condition" StartNode="2521" EndNode="2572">
</Annotation>
<Annotation Id="664" Type="system_transition_condition" StartNode="2714" EndNode="2733">
</Annotation>
<Annotation Id="665" Type="system_transition_condition" StartNode="2770" EndNode="2821">
</Annotation>
<Annotation Id="666" Type="system_transition_condition" StartNode="2840" EndNode="2867">
</Annotation>
<Annotation Id="667" Type="system_transition_condition" StartNode="2872" EndNode="2896">
</Annotation>
<Annotation Id="668" Type="system_transition_condition" StartNode="2912" EndNode="2926">
</Annotation>
<Annotation Id="669" Type="environment_transition_condition" StartNode="2920" EndNode="2941">
</Annotation>
<Annotation Id="670" Type="system_transition_condition" StartNode="2980" EndNode="3012">
</Annotation>
<Annotation Id="671" Type="system_transition_condition" StartNode="3044" EndNode="3091">
</Annotation>
<Annotation Id="672" Type="component_state" StartNode="3093" EndNode="3103">
</Annotation>
<Annotation Id="673" Type="system_transition_condition" StartNode="3093" EndNode="3123">
</Annotation>
<Annotation Id="674" Type="system_transition_condition" StartNode="3141" EndNode="3173">
</Annotation>
<Annotation Id="675" Type="component" StartNode="3166" EndNode="3173">
</Annotation>
<Annotation Id="676" Type="system_transition_condition" StartNode="3179" EndNode="3236">
</Annotation>
<Annotation Id="677" Type="system_transition_condition" StartNode="3237" EndNode="3313">
</Annotation>
<Annotation Id="678" Type="system_transition_condition" StartNode="4134" EndNode="4185">
</Annotation>
<Annotation Id="679" Type="system_transition_condition" StartNode="4512" EndNode="4546">
</Annotation>
<Annotation Id="680" Type="system_transition_condition" StartNode="4616" EndNode="4652">
</Annotation>
<Annotation Id="681" Type="system_transition_condition" StartNode="5519" EndNode="5572">
</Annotation>
<Annotation Id="682" Type="system_transition_condition" StartNode="5582" EndNode="5630">
</Annotation>
<Annotation Id="683" Type="system_transition_condition" StartNode="5641" EndNode="5691">
</Annotation>
<Annotation Id="684" Type="system_transition_condition" StartNode="5702" EndNode="5736">
</Annotation>
<Annotation Id="685" Type="system_transition_condition" StartNode="5746" EndNode="5794">
</Annotation>
<Annotation Id="686" Type="system_transition_condition" StartNode="5804" EndNode="5871">
</Annotation>
<Annotation Id="687" Type="system_transition_condition" StartNode="6128" EndNode="6152">
</Annotation>
<Annotation Id="688" Type="environment_transition_condition" StartNode="6136" EndNode="6152">
</Annotation>
<Annotation Id="689" Type="system_transition_condition" StartNode="6456" EndNode="6472">
</Annotation>
<Annotation Id="690" Type="system_transition_condition" StartNode="6483" EndNode="6532">
</Annotation>
<Annotation Id="691" Type="system_transition_condition" StartNode="6543" EndNode="6577">
</Annotation>
<Annotation Id="692" Type="system_transition_condition" StartNode="6588" EndNode="6635">
</Annotation>
<Annotation Id="693" Type="system_transition_condition" StartNode="6646" EndNode="6725">
</Annotation>
<Annotation Id="694" Type="system_transition_condition" StartNode="6737" EndNode="6784">
</Annotation>
<Annotation Id="695" Type="system_transition_condition" StartNode="6795" EndNode="6835">
</Annotation>
<Annotation Id="696" Type="system_transition_condition" StartNode="6846" EndNode="6912">
</Annotation>
<Annotation Id="697" Type="system_transition_condition" StartNode="6997" EndNode="7021">
</Annotation>
<Annotation Id="698" Type="environment_transition_condition" StartNode="6997" EndNode="7021">
</Annotation>
<Annotation Id="699" Type="environment_transition_condition" StartNode="7228" EndNode="7309">
</Annotation>
<Annotation Id="700" Type="environment_transition_condition" StartNode="7320" EndNode="7384">
</Annotation>
<Annotation Id="701" Type="system_transition_condition" StartNode="7413" EndNode="7452">
</Annotation>
<Annotation Id="702" Type="system_transition_condition" StartNode="7565" EndNode="7622">
</Annotation>
<Annotation Id="703" Type="system_transition_condition" StartNode="7670" EndNode="7689">
</Annotation>
<Annotation Id="704" Type="system_transition_condition" StartNode="7631" EndNode="7661">
</Annotation>
<Annotation Id="705" Type="system_transition_condition" StartNode="7698" EndNode="7741">
</Annotation>
<Annotation Id="706" Type="system_transition_condition" StartNode="7750" EndNode="7770">
</Annotation>
<Annotation Id="707" Type="environment_transition_condition" StartNode="7825" EndNode="7851">
</Annotation>
<Annotation Id="708" Type="environment_entity_property" StartNode="7852" EndNode="7861">
</Annotation>
<Annotation Id="709" Type="environment_entity_property" StartNode="8003" EndNode="8092">
</Annotation>
<Annotation Id="710" Type="environment_transition_condition" StartNode="8378" EndNode="8450">
</Annotation>
<Annotation Id="711" Type="environment_transition_condition" StartNode="8461" EndNode="8524">
</Annotation>
<Annotation Id="712" Type="environment_transition_condition" StartNode="8618" EndNode="8688">
</Annotation>
<Annotation Id="713" Type="system_transition_condition" StartNode="8720" EndNode="8752">
</Annotation>
<Annotation Id="714" Type="system_transition_condition" StartNode="8835" EndNode="8858">
</Annotation>
<Annotation Id="715" Type="system_transition_condition" StartNode="8790" EndNode="8826">
</Annotation>
<Annotation Id="716" Type="component" StartNode="9315" EndNode="9322">
</Annotation>
<Annotation Id="717" Type="system_transition_condition" StartNode="9285" EndNode="9370">
</Annotation>
<Annotation Id="718" Type="component" StartNode="9460" EndNode="9483">
</Annotation>
<Annotation Id="719" Type="component_state" StartNode="9485" EndNode="9492">
</Annotation>
<Annotation Id="720" Type="component_state" StartNode="9527" EndNode="9532">
</Annotation>
<Annotation Id="721" Type="component_state" StartNode="9594" EndNode="9604">
</Annotation>
<Annotation Id="722" Type="component" StartNode="9608" EndNode="9612">
</Annotation>
<Annotation Id="723" Type="component" StartNode="9620" EndNode="9643">
</Annotation>
<Annotation Id="724" Type="component" StartNode="9651" EndNode="9676">
</Annotation>
<Annotation Id="725" Type="component_state" StartNode="9690" EndNode="9699">
</Annotation>
<Annotation Id="726" Type="component" StartNode="9733" EndNode="9736">
</Annotation>
<Annotation Id="727" Type="component_state" StartNode="9741" EndNode="9746">
</Annotation>
<Annotation Id="728" Type="system_transition_condition" StartNode="9460" EndNode="9565">
</Annotation>
<Annotation Id="729" Type="system_transition_condition" StartNode="9593" EndNode="9643">
</Annotation>
<Annotation Id="730" Type="system_transition_condition" StartNode="9651" EndNode="9723">
</Annotation>
<Annotation Id="731" Type="system_transition_condition" StartNode="9733" EndNode="9785">
</Annotation>
<Annotation Id="732" Type="component" StartNode="9804" EndNode="9807">
</Annotation>
<Annotation Id="733" Type="component_state" StartNode="9808" EndNode="9814">
</Annotation>
<Annotation Id="734" Type="component_property" StartNode="9819" EndNode="9833">
</Annotation>
<Annotation Id="735" Type="system_transition_condition" StartNode="9804" EndNode="9833">
</Annotation>
<Annotation Id="736" Type="component_property" StartNode="9847" EndNode="9865">
</Annotation>
<Annotation Id="737" Type="component" StartNode="9873" EndNode="9876">
</Annotation>
<Annotation Id="738" Type="system_transition_condition" StartNode="9838" EndNode="9865">
</Annotation>
<Annotation Id="739" Type="component_state" StartNode="9877" EndNode="9891">
</Annotation>
<Annotation Id="740" Type="component_state" StartNode="9897" EndNode="9906">
</Annotation>
<Annotation Id="741" Type="component" StartNode="9912" EndNode="9915">
</Annotation>
<Annotation Id="742" Type="component_state" StartNode="9916" EndNode="9925">
</Annotation>
<Annotation Id="743" Type="system_transition_condition" StartNode="9873" EndNode="9906">
</Annotation>
<Annotation Id="744" Type="system_transition_condition" StartNode="9908" EndNode="9944">
</Annotation>
<Annotation Id="745" Type="component_state" StartNode="10008" EndNode="10016">
</Annotation>
<Annotation Id="746" Type="system_transition_condition" StartNode="10008" EndNode="10045">
</Annotation>
<Annotation Id="747" Type="component" StartNode="10051" EndNode="10054">
</Annotation>
<Annotation Id="748" Type="component" StartNode="10076" EndNode="10082">
</Annotation>
<Annotation Id="749" Type="component" StartNode="10099" EndNode="10103">
</Annotation>
<Annotation Id="750" Type="system_transition_condition" StartNode="10047" EndNode="10145">
</Annotation>
<Annotation Id="751" Type="component_state" StartNode="10231" EndNode="10239">
</Annotation>
<Annotation Id="752" Type="environment_entity_state" StartNode="10260" EndNode="10268">
</Annotation>
<Annotation Id="753" Type="environment_entity" StartNode="10250" EndNode="10256">
</Annotation>
<Annotation Id="754" Type="environment_transition_condition" StartNode="10246" EndNode="10269">
</Annotation>
<Annotation Id="755" Type="environment_entity_property" StartNode="10348" EndNode="10356">
</Annotation>
<Annotation Id="756" Type="component" StartNode="10367" EndNode="10370">
</Annotation>
<Annotation Id="757" Type="component_state" StartNode="10420" EndNode="10428">
</Annotation>
<Annotation Id="758" Type="component" StartNode="10399" EndNode="10402">
</Annotation>
<Annotation Id="759" Type="system_transition_condition" StartNode="10394" EndNode="10476">
</Annotation>
<Annotation Id="760" Type="component" StartNode="10484" EndNode="10487">
</Annotation>
<Annotation Id="761" Type="component_state" StartNode="10503" EndNode="10508">
</Annotation>
<Annotation Id="762" Type="component_state" StartNode="10529" EndNode="10534">
</Annotation>
<Annotation Id="763" Type="system_transition_condition" StartNode="10526" EndNode="10551">
</Annotation>
<Annotation Id="764" Type="component_state" StartNode="10600" EndNode="10605">
</Annotation>
<Annotation Id="765" Type="system_transition_condition" StartNode="10600" EndNode="10661">
</Annotation>
<Annotation Id="766" Type="component" StartNode="10765" EndNode="10795">
</Annotation>
<Annotation Id="767" Type="component" StartNode="10738" EndNode="10741">
</Annotation>
<Annotation Id="768" Type="component_state" StartNode="10756" EndNode="10761">
</Annotation>
<Annotation Id="769" Type="component" StartNode="10813" EndNode="10842">
</Annotation>
<Annotation Id="770" Type="component_state" StartNode="10860" EndNode="10868">
</Annotation>
<Annotation Id="771" Type="component_state" StartNode="10890" EndNode="10896">
</Annotation>
<Annotation Id="772" Type="component_state" StartNode="10940" EndNode="10945">
</Annotation>
<Annotation Id="773" Type="system_transition_condition" StartNode="10860" EndNode="10889">
</Annotation>
<Annotation Id="774" Type="system_transition_condition" StartNode="10890" EndNode="10905">
</Annotation>
<Annotation Id="775" Type="system_transition_condition" StartNode="10909" EndNode="10962">
</Annotation>
<Annotation Id="776" Type="environment_entity" StartNode="10978" EndNode="10986">
</Annotation>
<Annotation Id="777" Type="environment_transition_condition" StartNode="10966" EndNode="10999">
</Annotation>
<Annotation Id="778" Type="component" StartNode="11278" EndNode="11281">
</Annotation>
<Annotation Id="779" Type="component_property" StartNode="11331" EndNode="11339">
</Annotation>
<Annotation Id="780" Type="component_property" StartNode="11347" EndNode="11359">
</Annotation>
<Annotation Id="781" Type="component_property" StartNode="11511" EndNode="11518">
</Annotation>
<Annotation Id="782" Type="component_state" StartNode="11687" EndNode="11692">
</Annotation>
<Annotation Id="783" Type="component" StartNode="11694" EndNode="11702">
</Annotation>
<Annotation Id="784" Type="component" StartNode="13048" EndNode="13074">
</Annotation>
<Annotation Id="785" Type="component" StartNode="13023" EndNode="13042">
</Annotation>
<Annotation Id="786" Type="component_state" StartNode="13373" EndNode="13383">
</Annotation>
<Annotation Id="787" Type="component_property" StartNode="13373" EndNode="13389">
</Annotation>
<Annotation Id="788" Type="component_property" StartNode="13394" EndNode="13407">
</Annotation>
<Annotation Id="789" Type="component" StartNode="13866" EndNode="13880">
</Annotation>
<Annotation Id="790" Type="component" StartNode="14360" EndNode="14377">
</Annotation>
<Annotation Id="791" Type="system_transition_condition" StartNode="14399" EndNode="14417">
</Annotation>
<Annotation Id="792" Type="component" StartNode="14476" EndNode="14486">
</Annotation>
<Annotation Id="793" Type="component" StartNode="14488" EndNode="14506">
</Annotation>
<Annotation Id="794" Type="component" StartNode="14510" EndNode="14516">
</Annotation>
<Annotation Id="795" Type="environment_entity" StartNode="14554" EndNode="14562">
</Annotation>
<Annotation Id="796" Type="environment_transition_condition" StartNode="14554" EndNode="14572">
</Annotation>
<Annotation Id="797" Type="component" StartNode="16202" EndNode="16219">
</Annotation>
<Annotation Id="798" Type="component" StartNode="16228" EndNode="16235">
</Annotation>
<Annotation Id="799" Type="component_state" StartNode="16317" EndNode="16327">
</Annotation>
<Annotation Id="800" Type="component" StartNode="16369" EndNode="16376">
</Annotation>
<Annotation Id="801" Type="system_transition_condition" StartNode="16237" EndNode="16362">
</Annotation>
<Annotation Id="802" Type="component" StartNode="16505" EndNode="16512">
</Annotation>
<Annotation Id="803" Type="component" StartNode="16533" EndNode="16540">
</Annotation>
<Annotation Id="804" Type="component_state" StartNode="16547" EndNode="16558">
</Annotation>
<Annotation Id="805" Type="system_transition_condition" StartNode="16532" EndNode="16591">
</Annotation>
<Annotation Id="806" Type="component" StartNode="16673" EndNode="16676">
</Annotation>
<Annotation Id="807" Type="component" StartNode="16686" EndNode="16703">
</Annotation>
<Annotation Id="808" Type="component" StartNode="16712" EndNode="16730">
</Annotation>
<Annotation Id="809" Type="component" StartNode="16881" EndNode="16898">
</Annotation>
<Annotation Id="810" Type="component_state" StartNode="16952" EndNode="16956">
</Annotation>
<Annotation Id="811" Type="system_transition_condition" StartNode="16952" EndNode="16993">
</Annotation>
<Annotation Id="812" Type="component" StartNode="16998" EndNode="17018">
</Annotation>
<Annotation Id="813" Type="component_state" StartNode="17018" EndNode="17028">
</Annotation>
<Annotation Id="814" Type="system_transition_condition" StartNode="16995" EndNode="17061">
</Annotation>
<Annotation Id="815" Type="component" StartNode="17066" EndNode="17070">
</Annotation>
<Annotation Id="816" Type="component" StartNode="17075" EndNode="17078">
</Annotation>
<Annotation Id="817" Type="component" StartNode="17083" EndNode="17102">
</Annotation>
<Annotation Id="818" Type="component_state" StartNode="17103" EndNode="17117">
</Annotation>
<Annotation Id="819" Type="system_transition_condition" StartNode="17080" EndNode="17151">
</Annotation>
<Annotation Id="820" Type="component" StartNode="17764" EndNode="17781">
</Annotation>
<Annotation Id="821" Type="component_state" StartNode="17787" EndNode="17793">
</Annotation>
<Annotation Id="822" Type="component_state" StartNode="17820" EndNode="17827">
</Annotation>
<Annotation Id="823" Type="system_transition_condition" StartNode="17782" EndNode="17896">
</Annotation>
<Annotation Id="824" Type="component" StartNode="17910" EndNode="17913">
</Annotation>
<Annotation Id="826" Type="component" StartNode="17915" EndNode="17922">
</Annotation>
<Annotation Id="827" Type="component" StartNode="17924" EndNode="17927">
</Annotation>
<Annotation Id="828" Type="component" StartNode="17934" EndNode="17943">
</Annotation>
<Annotation Id="829" Type="component" StartNode="17964" EndNode="17984">
</Annotation>
<Annotation Id="830" Type="component_state" StartNode="17986" EndNode="17990">
</Annotation>
<Annotation Id="831" Type="component_state" StartNode="18083" EndNode="18094">
</Annotation>
<Annotation Id="832" Type="component" StartNode="18103" EndNode="18110">
</Annotation>
<Annotation Id="833" Type="component" StartNode="18118" EndNode="18124">
</Annotation>
<Annotation Id="834" Type="component_state" StartNode="18129" EndNode="18133">
</Annotation>
<Annotation Id="835" Type="system_transition_condition" StartNode="18125" EndNode="18274">
</Annotation>
<Annotation Id="836" Type="component" StartNode="18577" EndNode="18594">
</Annotation>
<Annotation Id="837" Type="component_state" StartNode="18624" EndNode="18635">
</Annotation>
<Annotation Id="838" Type="component_state" StartNode="18679" EndNode="18688">
</Annotation>
<Annotation Id="839" Type="component" StartNode="18704" EndNode="18725">
</Annotation>
<Annotation Id="840" Type="system_transition_condition" StartNode="18623" EndNode="18674">
</Annotation>
<Annotation Id="841" Type="system_transition_condition" StartNode="18675" EndNode="18794">
</Annotation>
<Annotation Id="842" Type="component_state" StartNode="18924" EndNode="18938">
</Annotation>
<Annotation Id="843" Type="component" StartNode="18854" EndNode="18875">
</Annotation>
<Annotation Id="844" Type="component_state" StartNode="19016" EndNode="19023">
</Annotation>
<Annotation Id="845" Type="system_transition_condition" StartNode="19012" EndNode="19145">
</Annotation>
<Annotation Id="846" Type="component_state" StartNode="19567" EndNode="19571">
</Annotation>
<Annotation Id="847" Type="component_state" StartNode="19592" EndNode="19600">
</Annotation>
<Annotation Id="848" Type="system_transition_condition" StartNode="19591" EndNode="19622">
</Annotation>
<Annotation Id="849" Type="component_state" StartNode="19647" EndNode="19656">
</Annotation>
<Annotation Id="850" Type="system_transition_condition" StartNode="19663" EndNode="19685">
</Annotation>
<Annotation Id="851" Type="component" StartNode="19634" EndNode="19644">
</Annotation>
<Annotation Id="852" Type="component" StartNode="19692" EndNode="19709">
</Annotation>
<Annotation Id="853" Type="component_state" StartNode="19709" EndNode="19718">
</Annotation>
<Annotation Id="854" Type="component" StartNode="19795" EndNode="19806">
</Annotation>
<Annotation Id="855" Type="component_state" StartNode="19809" EndNode="19818">
</Annotation>
<Annotation Id="856" Type="environment_entity" StartNode="19824" EndNode="19833">
</Annotation>
<Annotation Id="857" Type="environment_entity_state" StartNode="19837" EndNode="19844">
</Annotation>
<Annotation Id="858" Type="environment_transition_condition" StartNode="19824" EndNode="19844">
</Annotation>
<Annotation Id="859" Type="component" StartNode="19933" EndNode="19943">
</Annotation>
<Annotation Id="860" Type="component_state" StartNode="19947" EndNode="19955">
</Annotation>
<Annotation Id="861" Type="system_transition_condition" StartNode="19933" EndNode="19996">
</Annotation>
<Annotation Id="862" Type="component" StartNode="20006" EndNode="20024">
</Annotation>
<Annotation Id="863" Type="component_state" StartNode="20031" EndNode="20038">
</Annotation>
<Annotation Id="864" Type="component_state" StartNode="20045" EndNode="20063">
</Annotation>
<Annotation Id="865" Type="component" StartNode="20173" EndNode="20189">
</Annotation>
<Annotation Id="866" Type="component_state" StartNode="20189" EndNode="20199">
</Annotation>
<Annotation Id="867" Type="component" StartNode="20382" EndNode="20392">
</Annotation>
<Annotation Id="868" Type="component_state" StartNode="20396" EndNode="20408">
</Annotation>
<Annotation Id="869" Type="system_transition_condition" StartNode="20380" EndNode="20408">
</Annotation>
<Annotation Id="870" Type="system_transition_condition" StartNode="19633" EndNode="19656">
</Annotation>
<Annotation Id="871" Type="system_transition_condition" StartNode="19692" EndNode="19718">
</Annotation>
<Annotation Id="872" Type="system_transition_condition" StartNode="19795" EndNode="19818">
</Annotation>
<Annotation Id="873" Type="system_transition_condition" StartNode="20005" EndNode="20121">
</Annotation>
<Annotation Id="874" Type="system_transition_condition" StartNode="20172" EndNode="20221">
</Annotation>
<Annotation Id="875" Type="environment_entity" StartNode="20549" EndNode="20573">
</Annotation>
<Annotation Id="876" Type="component" StartNode="20653" EndNode="20669">
</Annotation>
<Annotation Id="877" Type="component_state" StartNode="20673" EndNode="20681">
</Annotation>
<Annotation Id="878" Type="system_transition_condition" StartNode="20652" EndNode="20681">
</Annotation>
<Annotation Id="879" Type="component_state" StartNode="20736" EndNode="20744">
</Annotation>
<Annotation Id="880" Type="component" StartNode="20752" EndNode="20759">
</Annotation>
<Annotation Id="881" Type="component" StartNode="20779" EndNode="20797">
</Annotation>
<Annotation Id="882" Type="component_state" StartNode="20798" EndNode="20811">
</Annotation>
<Annotation Id="883" Type="system_transition_condition" StartNode="20779" EndNode="20811">
</Annotation>
<Annotation Id="884" Type="component_state" StartNode="20818" EndNode="20825">
</Annotation>
<Annotation Id="885" Type="component" StartNode="21559" EndNode="21585">
</Annotation>
<Annotation Id="886" Type="component" StartNode="21732" EndNode="21735">
</Annotation>
<Annotation Id="887" Type="component" StartNode="21737" EndNode="21740">
</Annotation>
<Annotation Id="888" Type="component" StartNode="21742" EndNode="21749">
</Annotation>
<Annotation Id="889" Type="component" StartNode="21750" EndNode="21760">
</Annotation>
<Annotation Id="890" Type="component" StartNode="21764" EndNode="21770">
</Annotation>
<Annotation Id="891" Type="component_state" StartNode="22196" EndNode="22216">
</Annotation>
<Annotation Id="892" Type="component_state" StartNode="22218" EndNode="22225">
</Annotation>
<Annotation Id="894" Type="component_state" StartNode="22379" EndNode="22388">
</Annotation>
<Annotation Id="895" Type="system_transition_condition" StartNode="22217" EndNode="22265">
</Annotation>
<Annotation Id="896" Type="system_transition_condition" StartNode="22293" EndNode="22350">
</Annotation>
<Annotation Id="897" Type="system_transition_condition" StartNode="22378" EndNode="22431">
</Annotation>
<Annotation Id="898" Type="component_state" StartNode="22460" EndNode="22469">
</Annotation>
<Annotation Id="899" Type="system_transition_condition" StartNode="22461" EndNode="22514">
</Annotation>
<Annotation Id="900" Type="component_state" StartNode="22611" EndNode="22626">
</Annotation>
<Annotation Id="901" Type="system_transition_condition" StartNode="22610" EndNode="22626">
</Annotation>
<Annotation Id="902" Type="component_state" StartNode="22890" EndNode="22900">
</Annotation>
<Annotation Id="903" Type="component" StartNode="22825" EndNode="22842">
</Annotation>
<Annotation Id="904" Type="component" StartNode="22922" EndNode="22929">
</Annotation>
<Annotation Id="905" Type="component" StartNode="22936" EndNode="22939">
</Annotation>
<Annotation Id="906" Type="system_transition_condition" StartNode="22891" EndNode="22913">
</Annotation>
<Annotation Id="907" Type="system_transition_condition" StartNode="22922" EndNode="22967">
</Annotation>
<Annotation Id="908" Type="environment_entity_property" StartNode="23711" EndNode="23716">
</Annotation>
<Annotation Id="909" Type="environment_entity_property" StartNode="23776" EndNode="23786">
</Annotation>
<Annotation Id="910" Type="environment_entity_property" StartNode="24442" EndNode="24447">
</Annotation>
<Annotation Id="911" Type="environment_entity_property" StartNode="24473" EndNode="24477">
</Annotation>
<Annotation Id="912" Type="component_property" StartNode="24972" EndNode="24977">
</Annotation>
<Annotation Id="913" Type="component" StartNode="25036" EndNode="25049">
</Annotation>
<Annotation Id="914" Type="component_property" StartNode="25056" EndNode="25083">
</Annotation>
<Annotation Id="916" Type="component_property" StartNode="25255" EndNode="25259">
</Annotation>
<Annotation Id="917" Type="component" StartNode="28165" EndNode="28194">
</Annotation>
<Annotation Id="918" Type="component" StartNode="28427" EndNode="28433">
</Annotation>
<Annotation Id="919" Type="component_property" StartNode="28514" EndNode="28535">
</Annotation>
<Annotation Id="920" Type="component" StartNode="28650" EndNode="28656">
</Annotation>
<Annotation Id="921" Type="component_state" StartNode="29035" EndNode="29044">
</Annotation>
<Annotation Id="922" Type="component_property" StartNode="29072" EndNode="29083">
</Annotation>
<Annotation Id="923" Type="component" StartNode="29773" EndNode="29795">
</Annotation>
<Annotation Id="924" Type="component_state" StartNode="29797" EndNode="29806">
</Annotation>
<Annotation Id="925" Type="component_state" StartNode="29890" EndNode="29896">
</Annotation>
</AnnotationSet>

<!-- Named annotation set -->

<AnnotationSet Name="Original markups">
</AnnotationSet>

</GateDocument>
