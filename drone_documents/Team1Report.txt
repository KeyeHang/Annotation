Final Report: Aerial Robotic Choir


Aditya Ghadiali
Robotics Institute
Pittsburgh, PA 15213

aghadial@andrew.cmu.edu

Saurabh Nair
Robotics Institute
Pittsburgh, PA 15213

snnair@andrew.cmu.edu

Flavian Pegado
Robotics Institute
Pittsburgh, PA 15213
ffp@andrew.cmu.edu

Abstract

1                           The development of robotics has opened new avenues 
for the entertainment industry.

2                           Through this project, we aim to explore one such 
avenue: the creation of a musical

3                           quartet ¹ of quad-rotors that "sing" musical tones 
by controlling their throttle with

4                           feedback. The rotation of quad-rotor propeller 
blades generates an acoustic noise;

5                           the fundamental frequency of this sound can be 
controlled by varying the speed of

6                           rotation. While typical applications in robotics 
would aim to minimize this sound,

7                           we look to sense and process it, using it as an 
input to the controller. The proposed

8                           solution involves the use of quad-rotors which are 
tethered to the ground using an

9                           elastic material to allow a wide range of throttles 
(and therefore musical tones)

10                           while keeping the robots within a constrained 
area. The result would be a visual

11                           and auditory spectacle, demonstrating the 
confluence of robotic control and music.

12      1    Introduction

13      Quad-copter controls and dynamics are an interesting and constantly 
evolving problem in robotics.

14      The proposed project involves the precise control of quad-copters to 
create a musical sound; bringing

15      together technology and art, a theme which has come to fore with recent 
advances in robotics and

16      technology.

17      1.1    Art and Robotics

18      On Feb. 6, 2017, Intel pulled off an impressive 300 unmanned drone 
light extravaganza during the

19      Super Bowl LI half-time show [8].This presentation stands witness to 
the nexus of robotics and the art

20      industry. These demonstrations are just the tip of the iceberg;there is 
a considerable ongoing research

21      in the field of quad-rotors and entertainment devices. Recently, 
Norwegian pop star Aurora teamed up

22      with YouTube and Carnegie Mellon for a music video starring some really 
surprising backup dancers:

23      drones [9]. The quad-copter choreography was programmed by Ali Momeni, 
associate professor of

24      art at Carnegie Mellon University, and Ellen Cappo, a PhD student in 
robotics.

25      1.2    Premise and introduction to music

26      The pitch of a sound generated by musical instrument is the fundamental 
frequency of a note. The

27      pitch usually associated to a note. Notes go from A to G in semitone 
intervals(Except B-C and E-F).

28      An octave contains 12 notes in total.  To move an octave higher, we 
need to double the frequency

29      being played. For example, the note A4 (the note A on the 4th octave) 
has a fundamental frequency

30      of 440Hz. The fundamental frequency of A5, the A an octave higher, is 
880Hz. A melodic phrase is

31      a combination of notes or pitches held for different times in a 
specific order.The same notes repeat

¹Quartet In music,  a quartet is an ensemble of four singers or instrumental 
performers;  or a musical
composition for four voices or instruments. For the scope of the course, we 
will be addressing only a chord or a
set of note progressions on one quad-copter played in preprogrammed timing.


Figure 1: Previous Work

32      themselves every octave, but at fundamental frequencies that are 
doubled (if the octave is higher) or

33      halved (if the octave is lower). The character or quality of a musical 
sound or voice as distinct from

34      its pitch and intensity is the timbre. We hypothesized that the 
quad-rotor will play controlled notes

35      and will have a timbre of its own sounding like an instrument. ²

36      2    Related work

37      There has some previous work in measuring quad-rotor noise, power and 
the fundamental frequency

38      from different distances, angles and thrusts.  Figure 1 illustrates the 
work done by the self funded

39      research[4].

40      Some work has been carried out on the auralization of the rotor noise 
components of a quad-rotor,

41      as described in [5]. Most of this work is directed towards the 
physics-based prediction of the tonal

42      components of the rotor noise.  This paper validates the premise that a 
particular combination of

43      BLDC motor and propeller at produces distinct tonal noise for different 
orientations, altitudes and

44      thrust.

45      This report illustrates the progress made on the project so far, as 
well as the the updated milestones,

46      work division and proposal feedback.

47      3    Approach

48      We start with a brief description of the system architecture covering 
the Functional and Cyber-Physical

49      Architectures of the system. Next, we present the progress in each of 
the individual subsystems viz.

50      the Quad-rotor(Drone), Tethering System, Audio interface, and Controls.

51      3.1    System Architecture

52      Functional Architecture: The overall functional architecture of the 
system is illustrated by Figure 2.

53      The key components included are the remote computer, on-board computer, 
quad-rotor and tethering

54      subsystem. The system consists of a single remote computer and a single 
drone sub-system (includes

55      the drone, on-board computer and tethering system).  The remote 
computer sends a target note to

56      be played to the drone system. The on-board computer extracts the 
fundamental frequency of the

57      propeller noise captured via the on-board microphone and calculates the 
difference between the target

58      frequency and the fundamental frequency. This signal is fed to the 
controller which generates the

59      control signals. The control signals are communicated to the quad-rotor 
over UART interface. The

60      drone executes the control commands which produce the desired tone. The 
resultant propeller noise

61      is feedback to the on-board computer. The tethering system constraints 
the quad-rotor to the spatial

62      limits specified by the system requirements. For the current 
implementation, the remote computer

63      and the on-board computer have been combined into a single unit.

64      Cyber-physical Architecture: The Cyber-physical architecture of the 
system is illustrated by Figure

65      2. The remote computer is a standard Linux machine. It runs the sound 
analyzer blackbox and outputs

²Note The terms quad-copter, quad-rotor and drone have been used 
interchangeably.


Figure 2: System Architecture

66      the target notes to be sent to each of the individual drones. The drone 
subsystem has an Odroid Single

67      Board Computer as the onboard computer. The ODROID is a powerful SBC 
powered by an Exynos

68      5422 Octa big.LITTLE ARM Cortex-A15 @ 2.0 GHz quad-core and Cortex-A7 
quad-core CPUs and

69      had 2GB of LPDDR3 RAM. The signal processing and controls are handled 
by the ODROID. We are

70      using Arduino SBC as the flight controller. The drone is powered by 
four BLDC motors (2300 KV)

71      with 5 inch propellers and a 3S power train. The tethering system is 
basically a spring-mass-damper

72      system, where the spring allows for the required constrained motion of 
the drone along the vertical

73      axis and the damping is provided by friction generated by the 80/20 
bracket pieces attached to the

74      springs.

75                                                                              
        ft = Vehicle Thrust; T = Tension

4

T  =      Ki ∗ sin(θi)                                              (1)

i=1

ft − T  = m ∗ g                                                              
(2)

Ti = Ki ∗ ∆xi                                                    (3)

4

T  =      Ki ∗ ∆xi ∗ sin(θi)                                         (4)

i=1

4

ft = m ∗ g +      Ki ∗ ∆xi ∗ sin(θi)                                    (5)

i=1


Figure 3: Final Structure

76      3.2    Setup


77

78

79

80

81

82

83

84

85

86

87

88

89

90

91

92

93

94

95

96

97

98

99

100

101

102

103

104

Drone:

The drone we were provided with was initially controlled using a Raspberry Pi. 
Our team along with
Professor Momeni came to the agreement that it was likely the Pi would not be 
able to handle sound
processing in real time. So, we opted for an ODROID as our computation 
platform. This also gives
us an option of using ROS in the future. The fitting of the ODROID required a 
new mount to be fixed
to the bottom of the quad-rotor.  The design for the base was provided by 
Professor Momeni.  We
laser-cut a ply-wood plank using the .dxf design file provided. Refer to the 
Fig.3 to check out the
laser-cut ply wood.

The drone setup comprised the steps of fitting a base the ODROID mounts to, 
re-wiring the ESCs,
new TTL-telemetry connection and sensor calibration. The assembled drone can be 
seen in fig. 3.

Tethering system: Another milestone we have met is assembling the mechanical 
base for tethering.
The key idea was that the four corners of the base would have pulleys with four 
steel wire ropes that
are attached to the drone at one end and a set of springs at the other, as we 
can see from the figure.
A simple, scalable calculation was carried using the maximum vehicle thrust, 
vehicle weight and
the maximum allowable/required displacement was carried out for the spring 
constant of the springs
used, as we can see from equation 5. The variation in altitude of the 
quad-rotor will be limited to
between 1-4 feet during operation due to the tethering and the size of the 
brackets used, which meets
our sponsor’s requirements for visuals. Fig.3 shows the current state of the 
mechanical structure.

Calibration: Once the initial mechanical setup was done and the drone was 
assembled, we began
calibration of the sensors and the ESCs. The flight controller in use was the 
Pixhawk-4. The softwares
explored included Mission planner and QGround control.  The accelerometers,  
gyroscopes and
barometer are calibrated. Unfortunately, we were unable to calibrate the ESCs 
as we cannot rotate the
motors at the minimum and maximum throttle during calibration without a remote 
controller. This
cost us time and is still in progress.

Software control: Our attempts to get the pixhawk controller working failed due 
to the need for the
propriety firmware of the Ariel-Robotics Lab and incompatible RC files. As a 
result, we bypassed
the PX4 with an Arduino that takes feedback from the laptop over serial.  The 
laptop is running a
software designed using Pure-Data. The architecture can be seen from figure 2


Figure 4: Fundamental Frequency Extraction

105      3.3    Audio interface

106      On the audio interface front, we tried to record the sound produced by 
a BLDC motor held in place

107      by a Panavise using a different ESC so parallel work could be carried 
out on the drone. We wrote an

108      Arduino sketch to ramp up the motor speed in steps of 0.01 in both 
clockwise and anti-clockwise

109      directions, printing the speed at each step and listening for changes 
in the acoustic noise generated by

110      the motor. We have also worked on writing pulse-width modulated square 
signals of a set of fixed

111      duty cycles to the ESC, and observing the motor’s response.

112      Initially, we used a simple piezo element to record these vibrations, 
however, this proved insufficient,

113      with the sound being inaudible in the recording. Professor Momeni then 
provided us with another

114      microphone, pre-amplifying circuit and mixer with which the sound 
tones generated were recorded

115      using an appropriate, adjusted gain. We processed the recorded sound 
using Audacity (simple noise

116      suppression, compression and signal amplification) and then used Fast 
Fourier transform to extract

117      the fundamental frequency of the notes as seen in figure 3.

118      The recorded and processed audio used was of the ramping duty cycle 
input, and in the figure we can

119      see two distinct fundamental frequencies in subplots 1 and 3, with 
subplot 2 showing the transition

120      phase.

121      In flight, the drone features the same combination of a microphone 
with a pre-amplifier circuit to

122      record the audio signal.  This signal will be fed into the PureData 
program provided by Professor

123      Momeni  running  on  the  ODROID,  which  will  extract  the  
fundamental  frequency.   We  use  the

124      difference between this frequency and the frequency of the tone we 
intended to generate as an error

125      signal which the control algorithm looks to minimize.

126      Table 1 shows the frequencies and difference in frequencies as we move 
along musical notes in an

127      octave. The frequency difference scales in multiples of 2 as we go 
from one octave to the next. For a

128      known acoustic noise to control command/thrust mapping, we can expand 
this table to span notes

129      over every octave that the drone may generate. The mapping function 
can be then used to calculate

130      the duty cycle of PWM that corresponds to a particular note. We must 
note that the range of notes the

131      drone can produce is dependent on a number of parameters, including 
but not limited to: propeller

132      size and geometry, motor size, drone size and even altitude. 
Demonstration of the octave mapping

133      can be found here: https://youtu.be/uOV2gfzFpIw [6]

134      3.4    Controls

135      Both open and closed loop control were implemented to generate the 
musical tones.   The tone

136      mapping given in section 3.3 corresponds to open loop. Open loop 
control works fine provided we

137      tune the PWM targets each time the drone is used. The tone generated 
depends on the propellers,


Table 1: Musical Note Frequency Table

Table 2: Pure Data Structure

138      battery level as well as the power consumed by the motor. The use of a 
closed loop controller allowed

139      us to bypass the constant need for tuning. The feedback is given by a 
Pure-Data based sound analysis

140      software that measures the fundamental frequency at a fixed output 
frequency (currently set to 11

141      Hertz, but can be set up to run at upto 20 Hz).  The Arduino then 
calculates the error in the target

142      note and the fundamental frequency which is fed to a PID controller 
that calculates the new PWM to

143      the ESCs. The Arduino has limitations with regards to computation 
power, which makes our system

144      response slow. The system can play notes at 60 beats per minute 
currently. With an Odroid as the

145      main controller, we should be able to generate higher tempos.  The 
difference between open and

146      closed loop control has been demonstrated in our final video [7].

147      4    Work Division

148      The work division for the project is shown in Table 3. All the tasks 
in green have been completed,

149      orange are not relevant to the project anymore, and red implies these 
tasks were de-scoped.


Table 3: Task Distribution (Green > Complete, Orange > Not relevant for the 
final system anymore,
Red > De-scoped) We set up a ROS architecture with another quadrotor(Danaus) 
that works on
commands sent from a Matlab node.  As this system required motion capture set 
up in the Aerial
Robotics Lab which was not acceptable to our sponsor, we had to abandon this 
line of inquiry and
continue development with the single drone as we have.

150      5    Results

151      We have successfully generated fifteen semitones using a single 
quad-rotor, at a speed of 60 beats per

152      minute, with the notes chained together to form a tonal sequence or a 
song. Higher beat-per-minute

153      tempos have been achieved using the ODROIDs GPIOs as PWM inputs to the 
ESCs. Currently, we

154      play the root note representatives of the chords that form a song, as 
seen from the demonstration

155      of ’Smoke on the Water’ (link below). The mechanical structure has 
been tested and verified for a

156      variety of thrusts, as we can see from the videos below. The code 
implemented is portable to other

157      drones of the same specifications, and can be scaled to replicate the 
results with other drones as well.

158      6    Demonstration

159      A demonstration of our robot choir setup playing Beethoveen’s 
Moonlight Sonata, and Deep Purple’s

160      Smoke on the Water can be found here: https://youtu.be/fNxGle8U9os [7]

161      References

162      [1]  Article  title:  Welcome  to  DroneKit-Python’s  documentation!   
Website  title:  Python.dronekit.io  URL:

163      http://python.dronekit.io/

164      [2] Website Title: Mavros Wiki URL: http://wiki.ros.org/mavros

165      [3] Website Title: Embedded ROS URL: 
http://wiki.ros.org/rosseria_embeddedlinux

166      [4] N Kloet, S Watkins and R Clothier: Acoustic signature measurement 
of small multi-rotor unmanned aircraft

167      systems

168      [5] Andrew Christian, D. Douglas Boyd, et al Auralization of tonal 
rotor noise components of a quadcopter

169      flyover


170      [6] Website: Initial motor sound mapping 
https://drive.google.com/open?id=0B2TRi3T8Btdkb2N1R3loNXFwMXc

171      [7] Website: Final System Demo video https://youtu.be/fNxGle8U9os

172      [8] Website:  
https://www.usatoday.com/story/tech/talkingtech/2017/02/06/check-out-drones-supe
r-bowl-51-

173      halftime-show/97545800/

174      [9]Website: 
https://www.theverge.com/2016/12/20/14030706/aurora-drones-winter-bird-music-vid
eo

